# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['VlanArgs', 'Vlan']

@pulumi.input_type
class VlanArgs:
    def __init__(__self__, *,
                 vlan_id: pulumi.Input[builtins.int],
                 name: Optional[pulumi.Input[builtins.str]] = None):
        """
        The set of arguments for constructing a Vlan resource.
        :param pulumi.Input[builtins.int] vlan_id: The ID for the VLAN.
               Valid value range is from `0` to `4095`.
        :param pulumi.Input[builtins.str] name: Specifies the name of the VLAN to configure on the F5OS platform.
               This parameter is required when creating a resource.
               The first character must be a letter, alphanumeric characters are allowed.
               Periods, commas, hyphens, and underscores are allowed.
               The name cannot exceed 58 characters.
        """
        pulumi.set(__self__, "vlan_id", vlan_id)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter(name="vlanId")
    def vlan_id(self) -> pulumi.Input[builtins.int]:
        """
        The ID for the VLAN.
        Valid value range is from `0` to `4095`.
        """
        return pulumi.get(self, "vlan_id")

    @vlan_id.setter
    def vlan_id(self, value: pulumi.Input[builtins.int]):
        pulumi.set(self, "vlan_id", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Specifies the name of the VLAN to configure on the F5OS platform.
        This parameter is required when creating a resource.
        The first character must be a letter, alphanumeric characters are allowed.
        Periods, commas, hyphens, and underscores are allowed.
        The name cannot exceed 58 characters.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class _VlanState:
    def __init__(__self__, *,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 vlan_id: Optional[pulumi.Input[builtins.int]] = None):
        """
        Input properties used for looking up and filtering Vlan resources.
        :param pulumi.Input[builtins.str] name: Specifies the name of the VLAN to configure on the F5OS platform.
               This parameter is required when creating a resource.
               The first character must be a letter, alphanumeric characters are allowed.
               Periods, commas, hyphens, and underscores are allowed.
               The name cannot exceed 58 characters.
        :param pulumi.Input[builtins.int] vlan_id: The ID for the VLAN.
               Valid value range is from `0` to `4095`.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if vlan_id is not None:
            pulumi.set(__self__, "vlan_id", vlan_id)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Specifies the name of the VLAN to configure on the F5OS platform.
        This parameter is required when creating a resource.
        The first character must be a letter, alphanumeric characters are allowed.
        Periods, commas, hyphens, and underscores are allowed.
        The name cannot exceed 58 characters.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="vlanId")
    def vlan_id(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        The ID for the VLAN.
        Valid value range is from `0` to `4095`.
        """
        return pulumi.get(self, "vlan_id")

    @vlan_id.setter
    def vlan_id(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "vlan_id", value)


@pulumi.type_token("f5os:index/vlan:Vlan")
class Vlan(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 vlan_id: Optional[pulumi.Input[builtins.int]] = None,
                 __props__=None):
        """
        Resource to Manage VLANs on F5OS based systems like chassis partitions or rSeries platforms

        ## Example Usage

        ```python
        import pulumi
        import pulumi_f5os as f5os

        # Manages Vlans on F5OS platforms
        vlan_id = f5os.Vlan("vlan-id",
            vlan_id=4,
            name="vlan4")
        ```

        ## Import

        Vlan can be imported by specifying the numeric vlan identifier.

        ```sh
        $ pulumi import f5os:index/vlan:Vlan vlan-id-import 4
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] name: Specifies the name of the VLAN to configure on the F5OS platform.
               This parameter is required when creating a resource.
               The first character must be a letter, alphanumeric characters are allowed.
               Periods, commas, hyphens, and underscores are allowed.
               The name cannot exceed 58 characters.
        :param pulumi.Input[builtins.int] vlan_id: The ID for the VLAN.
               Valid value range is from `0` to `4095`.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: VlanArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Resource to Manage VLANs on F5OS based systems like chassis partitions or rSeries platforms

        ## Example Usage

        ```python
        import pulumi
        import pulumi_f5os as f5os

        # Manages Vlans on F5OS platforms
        vlan_id = f5os.Vlan("vlan-id",
            vlan_id=4,
            name="vlan4")
        ```

        ## Import

        Vlan can be imported by specifying the numeric vlan identifier.

        ```sh
        $ pulumi import f5os:index/vlan:Vlan vlan-id-import 4
        ```

        :param str resource_name: The name of the resource.
        :param VlanArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(VlanArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 vlan_id: Optional[pulumi.Input[builtins.int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = VlanArgs.__new__(VlanArgs)

            __props__.__dict__["name"] = name
            if vlan_id is None and not opts.urn:
                raise TypeError("Missing required property 'vlan_id'")
            __props__.__dict__["vlan_id"] = vlan_id
        super(Vlan, __self__).__init__(
            'f5os:index/vlan:Vlan',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            name: Optional[pulumi.Input[builtins.str]] = None,
            vlan_id: Optional[pulumi.Input[builtins.int]] = None) -> 'Vlan':
        """
        Get an existing Vlan resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] name: Specifies the name of the VLAN to configure on the F5OS platform.
               This parameter is required when creating a resource.
               The first character must be a letter, alphanumeric characters are allowed.
               Periods, commas, hyphens, and underscores are allowed.
               The name cannot exceed 58 characters.
        :param pulumi.Input[builtins.int] vlan_id: The ID for the VLAN.
               Valid value range is from `0` to `4095`.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _VlanState.__new__(_VlanState)

        __props__.__dict__["name"] = name
        __props__.__dict__["vlan_id"] = vlan_id
        return Vlan(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[builtins.str]:
        """
        Specifies the name of the VLAN to configure on the F5OS platform.
        This parameter is required when creating a resource.
        The first character must be a letter, alphanumeric characters are allowed.
        Periods, commas, hyphens, and underscores are allowed.
        The name cannot exceed 58 characters.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="vlanId")
    def vlan_id(self) -> pulumi.Output[builtins.int]:
        """
        The ID for the VLAN.
        Valid value range is from `0` to `4095`.
        """
        return pulumi.get(self, "vlan_id")

