# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetDeviceInfoControllerImageResult',
    'GetDeviceInfoInterfaceResult',
    'GetDeviceInfoPartitionImageResult',
    'GetDeviceInfoTenantImageResult',
    'GetDeviceInfoVlanResult',
]

@pulumi.output_type
class GetDeviceInfoControllerImageResult(dict):
    def __init__(__self__, *,
                 os: builtins.str,
                 service: builtins.str,
                 version: builtins.str):
        """
        :param builtins.str os: OS of the ISO image
        :param builtins.str service: Service number of the ISO image
        :param builtins.str version: Version of the ISO image
        """
        pulumi.set(__self__, "os", os)
        pulumi.set(__self__, "service", service)
        pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter
    def os(self) -> builtins.str:
        """
        OS of the ISO image
        """
        return pulumi.get(self, "os")

    @property
    @pulumi.getter
    def service(self) -> builtins.str:
        """
        Service number of the ISO image
        """
        return pulumi.get(self, "service")

    @property
    @pulumi.getter
    def version(self) -> builtins.str:
        """
        Version of the ISO image
        """
        return pulumi.get(self, "version")


@pulumi.output_type
class GetDeviceInfoInterfaceResult(dict):
    def __init__(__self__, *,
                 enabled: builtins.bool,
                 l3_counters: Mapping[str, builtins.str],
                 mtu: builtins.int,
                 name: builtins.str,
                 operational_status: builtins.str,
                 port_speed: builtins.str,
                 type: builtins.str):
        """
        :param builtins.bool enabled: Interface enabled
        :param builtins.int mtu: Interface mtu
        :param builtins.str name: Interface name
        :param builtins.str operational_status: Interface operational status
        :param builtins.str port_speed: Interface port speed
        :param builtins.str type: Interface type
        """
        pulumi.set(__self__, "enabled", enabled)
        pulumi.set(__self__, "l3_counters", l3_counters)
        pulumi.set(__self__, "mtu", mtu)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "operational_status", operational_status)
        pulumi.set(__self__, "port_speed", port_speed)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def enabled(self) -> builtins.bool:
        """
        Interface enabled
        """
        return pulumi.get(self, "enabled")

    @property
    @pulumi.getter(name="l3Counters")
    def l3_counters(self) -> Mapping[str, builtins.str]:
        return pulumi.get(self, "l3_counters")

    @property
    @pulumi.getter
    def mtu(self) -> builtins.int:
        """
        Interface mtu
        """
        return pulumi.get(self, "mtu")

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        """
        Interface name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="operationalStatus")
    def operational_status(self) -> builtins.str:
        """
        Interface operational status
        """
        return pulumi.get(self, "operational_status")

    @property
    @pulumi.getter(name="portSpeed")
    def port_speed(self) -> builtins.str:
        """
        Interface port speed
        """
        return pulumi.get(self, "port_speed")

    @property
    @pulumi.getter
    def type(self) -> builtins.str:
        """
        Interface type
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetDeviceInfoPartitionImageResult(dict):
    def __init__(__self__, *,
                 os: builtins.str,
                 service: builtins.str,
                 version: builtins.str):
        """
        :param builtins.str os: OS of the ISO image
        :param builtins.str service: Service number of the ISO image
        :param builtins.str version: Version of the ISO image
        """
        pulumi.set(__self__, "os", os)
        pulumi.set(__self__, "service", service)
        pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter
    def os(self) -> builtins.str:
        """
        OS of the ISO image
        """
        return pulumi.get(self, "os")

    @property
    @pulumi.getter
    def service(self) -> builtins.str:
        """
        Service number of the ISO image
        """
        return pulumi.get(self, "service")

    @property
    @pulumi.getter
    def version(self) -> builtins.str:
        """
        Version of the ISO image
        """
        return pulumi.get(self, "version")


@pulumi.output_type
class GetDeviceInfoTenantImageResult(dict):
    def __init__(__self__, *,
                 date: builtins.str,
                 image_name: builtins.str,
                 in_use: builtins.bool,
                 size: builtins.str,
                 status: builtins.str,
                 type: builtins.str):
        """
        :param builtins.str date: Image Date
        :param builtins.str image_name: Image name
        :param builtins.bool in_use: In use
        :param builtins.str size: Image Size
        :param builtins.str status: Image Status
        :param builtins.str type: Image Type
        """
        pulumi.set(__self__, "date", date)
        pulumi.set(__self__, "image_name", image_name)
        pulumi.set(__self__, "in_use", in_use)
        pulumi.set(__self__, "size", size)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def date(self) -> builtins.str:
        """
        Image Date
        """
        return pulumi.get(self, "date")

    @property
    @pulumi.getter(name="imageName")
    def image_name(self) -> builtins.str:
        """
        Image name
        """
        return pulumi.get(self, "image_name")

    @property
    @pulumi.getter(name="inUse")
    def in_use(self) -> builtins.bool:
        """
        In use
        """
        return pulumi.get(self, "in_use")

    @property
    @pulumi.getter
    def size(self) -> builtins.str:
        """
        Image Size
        """
        return pulumi.get(self, "size")

    @property
    @pulumi.getter
    def status(self) -> builtins.str:
        """
        Image Status
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def type(self) -> builtins.str:
        """
        Image Type
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetDeviceInfoVlanResult(dict):
    def __init__(__self__, *,
                 vlan_id: builtins.int,
                 vlan_name: builtins.str):
        """
        :param builtins.int vlan_id: Vlan id
        :param builtins.str vlan_name: Vlan name
        """
        pulumi.set(__self__, "vlan_id", vlan_id)
        pulumi.set(__self__, "vlan_name", vlan_name)

    @property
    @pulumi.getter(name="vlanId")
    def vlan_id(self) -> builtins.int:
        """
        Vlan id
        """
        return pulumi.get(self, "vlan_id")

    @property
    @pulumi.getter(name="vlanName")
    def vlan_name(self) -> builtins.str:
        """
        Vlan name
        """
        return pulumi.get(self, "vlan_name")


