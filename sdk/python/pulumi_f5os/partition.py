# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['PartitionArgs', 'Partition']

@pulumi.input_type
class PartitionArgs:
    def __init__(__self__, *,
                 configuration_volume_size: Optional[pulumi.Input[builtins.int]] = None,
                 enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 images_volume_size: Optional[pulumi.Input[builtins.int]] = None,
                 ipv4_mgmt_address: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_mgmt_gateway: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_mgmt_address: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_mgmt_gateway: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 os_version: Optional[pulumi.Input[builtins.str]] = None,
                 shared_volume_size: Optional[pulumi.Input[builtins.int]] = None,
                 slots: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.int]]]] = None,
                 timeout: Optional[pulumi.Input[builtins.int]] = None):
        """
        The set of arguments for constructing a Partition resource.
        :param pulumi.Input[builtins.int] configuration_volume_size: select the desired configuration volume in increments of 1 GB.
               The default value is 10 GB, with a minimum of 5 GB and a maximum of 15 GB.After volume sizes are configured, their sizes can be increased but not reduced
        :param pulumi.Input[builtins.bool] enabled: Enables or disables partition.
        :param pulumi.Input[builtins.int] images_volume_size: select the desired storage volume for all tenant images in increments of 1 GB.
               The default value is 15 GB, with a minimum of 5 GB and a maximum of 50 GB.After volume sizes are configured, their sizes can be increased but not reduced
        :param pulumi.Input[builtins.str] ipv4_mgmt_address: Specifies the IPv4 address and subnet mask used to access the chassis partition.
               The address must be specified in CIDR notation e.g. 192.168.1.1/24.
        :param pulumi.Input[builtins.str] ipv4_mgmt_gateway: Specifies the IPv4 chassis partition management gateway.
        :param pulumi.Input[builtins.str] ipv6_mgmt_address: Specifies the IPv6 address and subnet mask used to access the chassis partition.
               The address must be specified in CIDR notation e.g. 2002::1234:abcd:ffff:c0a8:101/64.
               Required for create operations.
        :param pulumi.Input[builtins.str] ipv6_mgmt_gateway: Specifies the IPv6 chassis partition management gateway.
               Required for create operations.
        :param pulumi.Input[builtins.str] name: Name of the chassis partition.
               Partition names must consist only of alphanumerics (0-9, a-z, A-Z), must begin with a letter, and are limited to 31 characters.
        :param pulumi.Input[builtins.str] os_version: Specifies the partition F5OS-C OS Bundled version.(ISO image version)
        :param pulumi.Input[builtins.int] shared_volume_size: select the desired user data (tcpdump captures, QKView data, etc.) volume in increments of 1 GB.
               The default value is 10 GB, with a minimum of 5 GB and a maximum of 20 GBAfter volume sizes are configured, their sizes can be increased but not reduced
        :param pulumi.Input[Sequence[pulumi.Input[builtins.int]]] slots: List of integers.
               Specifies which slots with which the chassis partition should associated.
        :param pulumi.Input[builtins.int] timeout: The number of seconds to wait for partition to transition to running state.
        """
        if configuration_volume_size is not None:
            pulumi.set(__self__, "configuration_volume_size", configuration_volume_size)
        if enabled is not None:
            pulumi.set(__self__, "enabled", enabled)
        if images_volume_size is not None:
            pulumi.set(__self__, "images_volume_size", images_volume_size)
        if ipv4_mgmt_address is not None:
            pulumi.set(__self__, "ipv4_mgmt_address", ipv4_mgmt_address)
        if ipv4_mgmt_gateway is not None:
            pulumi.set(__self__, "ipv4_mgmt_gateway", ipv4_mgmt_gateway)
        if ipv6_mgmt_address is not None:
            pulumi.set(__self__, "ipv6_mgmt_address", ipv6_mgmt_address)
        if ipv6_mgmt_gateway is not None:
            pulumi.set(__self__, "ipv6_mgmt_gateway", ipv6_mgmt_gateway)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if os_version is not None:
            pulumi.set(__self__, "os_version", os_version)
        if shared_volume_size is not None:
            pulumi.set(__self__, "shared_volume_size", shared_volume_size)
        if slots is not None:
            pulumi.set(__self__, "slots", slots)
        if timeout is not None:
            pulumi.set(__self__, "timeout", timeout)

    @property
    @pulumi.getter(name="configurationVolumeSize")
    def configuration_volume_size(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        select the desired configuration volume in increments of 1 GB.
        The default value is 10 GB, with a minimum of 5 GB and a maximum of 15 GB.After volume sizes are configured, their sizes can be increased but not reduced
        """
        return pulumi.get(self, "configuration_volume_size")

    @configuration_volume_size.setter
    def configuration_volume_size(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "configuration_volume_size", value)

    @property
    @pulumi.getter
    def enabled(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Enables or disables partition.
        """
        return pulumi.get(self, "enabled")

    @enabled.setter
    def enabled(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "enabled", value)

    @property
    @pulumi.getter(name="imagesVolumeSize")
    def images_volume_size(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        select the desired storage volume for all tenant images in increments of 1 GB.
        The default value is 15 GB, with a minimum of 5 GB and a maximum of 50 GB.After volume sizes are configured, their sizes can be increased but not reduced
        """
        return pulumi.get(self, "images_volume_size")

    @images_volume_size.setter
    def images_volume_size(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "images_volume_size", value)

    @property
    @pulumi.getter(name="ipv4MgmtAddress")
    def ipv4_mgmt_address(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Specifies the IPv4 address and subnet mask used to access the chassis partition.
        The address must be specified in CIDR notation e.g. 192.168.1.1/24.
        """
        return pulumi.get(self, "ipv4_mgmt_address")

    @ipv4_mgmt_address.setter
    def ipv4_mgmt_address(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv4_mgmt_address", value)

    @property
    @pulumi.getter(name="ipv4MgmtGateway")
    def ipv4_mgmt_gateway(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Specifies the IPv4 chassis partition management gateway.
        """
        return pulumi.get(self, "ipv4_mgmt_gateway")

    @ipv4_mgmt_gateway.setter
    def ipv4_mgmt_gateway(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv4_mgmt_gateway", value)

    @property
    @pulumi.getter(name="ipv6MgmtAddress")
    def ipv6_mgmt_address(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Specifies the IPv6 address and subnet mask used to access the chassis partition.
        The address must be specified in CIDR notation e.g. 2002::1234:abcd:ffff:c0a8:101/64.
        Required for create operations.
        """
        return pulumi.get(self, "ipv6_mgmt_address")

    @ipv6_mgmt_address.setter
    def ipv6_mgmt_address(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv6_mgmt_address", value)

    @property
    @pulumi.getter(name="ipv6MgmtGateway")
    def ipv6_mgmt_gateway(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Specifies the IPv6 chassis partition management gateway.
        Required for create operations.
        """
        return pulumi.get(self, "ipv6_mgmt_gateway")

    @ipv6_mgmt_gateway.setter
    def ipv6_mgmt_gateway(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv6_mgmt_gateway", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Name of the chassis partition.
        Partition names must consist only of alphanumerics (0-9, a-z, A-Z), must begin with a letter, and are limited to 31 characters.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="osVersion")
    def os_version(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Specifies the partition F5OS-C OS Bundled version.(ISO image version)
        """
        return pulumi.get(self, "os_version")

    @os_version.setter
    def os_version(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "os_version", value)

    @property
    @pulumi.getter(name="sharedVolumeSize")
    def shared_volume_size(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        select the desired user data (tcpdump captures, QKView data, etc.) volume in increments of 1 GB.
        The default value is 10 GB, with a minimum of 5 GB and a maximum of 20 GBAfter volume sizes are configured, their sizes can be increased but not reduced
        """
        return pulumi.get(self, "shared_volume_size")

    @shared_volume_size.setter
    def shared_volume_size(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "shared_volume_size", value)

    @property
    @pulumi.getter
    def slots(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.int]]]]:
        """
        List of integers.
        Specifies which slots with which the chassis partition should associated.
        """
        return pulumi.get(self, "slots")

    @slots.setter
    def slots(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.int]]]]):
        pulumi.set(self, "slots", value)

    @property
    @pulumi.getter
    def timeout(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        The number of seconds to wait for partition to transition to running state.
        """
        return pulumi.get(self, "timeout")

    @timeout.setter
    def timeout(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "timeout", value)


@pulumi.input_type
class _PartitionState:
    def __init__(__self__, *,
                 configuration_volume_size: Optional[pulumi.Input[builtins.int]] = None,
                 enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 images_volume_size: Optional[pulumi.Input[builtins.int]] = None,
                 ipv4_mgmt_address: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_mgmt_gateway: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_mgmt_address: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_mgmt_gateway: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 os_version: Optional[pulumi.Input[builtins.str]] = None,
                 shared_volume_size: Optional[pulumi.Input[builtins.int]] = None,
                 slots: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.int]]]] = None,
                 timeout: Optional[pulumi.Input[builtins.int]] = None):
        """
        Input properties used for looking up and filtering Partition resources.
        :param pulumi.Input[builtins.int] configuration_volume_size: select the desired configuration volume in increments of 1 GB.
               The default value is 10 GB, with a minimum of 5 GB and a maximum of 15 GB.After volume sizes are configured, their sizes can be increased but not reduced
        :param pulumi.Input[builtins.bool] enabled: Enables or disables partition.
        :param pulumi.Input[builtins.int] images_volume_size: select the desired storage volume for all tenant images in increments of 1 GB.
               The default value is 15 GB, with a minimum of 5 GB and a maximum of 50 GB.After volume sizes are configured, their sizes can be increased but not reduced
        :param pulumi.Input[builtins.str] ipv4_mgmt_address: Specifies the IPv4 address and subnet mask used to access the chassis partition.
               The address must be specified in CIDR notation e.g. 192.168.1.1/24.
        :param pulumi.Input[builtins.str] ipv4_mgmt_gateway: Specifies the IPv4 chassis partition management gateway.
        :param pulumi.Input[builtins.str] ipv6_mgmt_address: Specifies the IPv6 address and subnet mask used to access the chassis partition.
               The address must be specified in CIDR notation e.g. 2002::1234:abcd:ffff:c0a8:101/64.
               Required for create operations.
        :param pulumi.Input[builtins.str] ipv6_mgmt_gateway: Specifies the IPv6 chassis partition management gateway.
               Required for create operations.
        :param pulumi.Input[builtins.str] name: Name of the chassis partition.
               Partition names must consist only of alphanumerics (0-9, a-z, A-Z), must begin with a letter, and are limited to 31 characters.
        :param pulumi.Input[builtins.str] os_version: Specifies the partition F5OS-C OS Bundled version.(ISO image version)
        :param pulumi.Input[builtins.int] shared_volume_size: select the desired user data (tcpdump captures, QKView data, etc.) volume in increments of 1 GB.
               The default value is 10 GB, with a minimum of 5 GB and a maximum of 20 GBAfter volume sizes are configured, their sizes can be increased but not reduced
        :param pulumi.Input[Sequence[pulumi.Input[builtins.int]]] slots: List of integers.
               Specifies which slots with which the chassis partition should associated.
        :param pulumi.Input[builtins.int] timeout: The number of seconds to wait for partition to transition to running state.
        """
        if configuration_volume_size is not None:
            pulumi.set(__self__, "configuration_volume_size", configuration_volume_size)
        if enabled is not None:
            pulumi.set(__self__, "enabled", enabled)
        if images_volume_size is not None:
            pulumi.set(__self__, "images_volume_size", images_volume_size)
        if ipv4_mgmt_address is not None:
            pulumi.set(__self__, "ipv4_mgmt_address", ipv4_mgmt_address)
        if ipv4_mgmt_gateway is not None:
            pulumi.set(__self__, "ipv4_mgmt_gateway", ipv4_mgmt_gateway)
        if ipv6_mgmt_address is not None:
            pulumi.set(__self__, "ipv6_mgmt_address", ipv6_mgmt_address)
        if ipv6_mgmt_gateway is not None:
            pulumi.set(__self__, "ipv6_mgmt_gateway", ipv6_mgmt_gateway)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if os_version is not None:
            pulumi.set(__self__, "os_version", os_version)
        if shared_volume_size is not None:
            pulumi.set(__self__, "shared_volume_size", shared_volume_size)
        if slots is not None:
            pulumi.set(__self__, "slots", slots)
        if timeout is not None:
            pulumi.set(__self__, "timeout", timeout)

    @property
    @pulumi.getter(name="configurationVolumeSize")
    def configuration_volume_size(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        select the desired configuration volume in increments of 1 GB.
        The default value is 10 GB, with a minimum of 5 GB and a maximum of 15 GB.After volume sizes are configured, their sizes can be increased but not reduced
        """
        return pulumi.get(self, "configuration_volume_size")

    @configuration_volume_size.setter
    def configuration_volume_size(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "configuration_volume_size", value)

    @property
    @pulumi.getter
    def enabled(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Enables or disables partition.
        """
        return pulumi.get(self, "enabled")

    @enabled.setter
    def enabled(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "enabled", value)

    @property
    @pulumi.getter(name="imagesVolumeSize")
    def images_volume_size(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        select the desired storage volume for all tenant images in increments of 1 GB.
        The default value is 15 GB, with a minimum of 5 GB and a maximum of 50 GB.After volume sizes are configured, their sizes can be increased but not reduced
        """
        return pulumi.get(self, "images_volume_size")

    @images_volume_size.setter
    def images_volume_size(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "images_volume_size", value)

    @property
    @pulumi.getter(name="ipv4MgmtAddress")
    def ipv4_mgmt_address(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Specifies the IPv4 address and subnet mask used to access the chassis partition.
        The address must be specified in CIDR notation e.g. 192.168.1.1/24.
        """
        return pulumi.get(self, "ipv4_mgmt_address")

    @ipv4_mgmt_address.setter
    def ipv4_mgmt_address(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv4_mgmt_address", value)

    @property
    @pulumi.getter(name="ipv4MgmtGateway")
    def ipv4_mgmt_gateway(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Specifies the IPv4 chassis partition management gateway.
        """
        return pulumi.get(self, "ipv4_mgmt_gateway")

    @ipv4_mgmt_gateway.setter
    def ipv4_mgmt_gateway(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv4_mgmt_gateway", value)

    @property
    @pulumi.getter(name="ipv6MgmtAddress")
    def ipv6_mgmt_address(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Specifies the IPv6 address and subnet mask used to access the chassis partition.
        The address must be specified in CIDR notation e.g. 2002::1234:abcd:ffff:c0a8:101/64.
        Required for create operations.
        """
        return pulumi.get(self, "ipv6_mgmt_address")

    @ipv6_mgmt_address.setter
    def ipv6_mgmt_address(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv6_mgmt_address", value)

    @property
    @pulumi.getter(name="ipv6MgmtGateway")
    def ipv6_mgmt_gateway(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Specifies the IPv6 chassis partition management gateway.
        Required for create operations.
        """
        return pulumi.get(self, "ipv6_mgmt_gateway")

    @ipv6_mgmt_gateway.setter
    def ipv6_mgmt_gateway(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv6_mgmt_gateway", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Name of the chassis partition.
        Partition names must consist only of alphanumerics (0-9, a-z, A-Z), must begin with a letter, and are limited to 31 characters.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="osVersion")
    def os_version(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Specifies the partition F5OS-C OS Bundled version.(ISO image version)
        """
        return pulumi.get(self, "os_version")

    @os_version.setter
    def os_version(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "os_version", value)

    @property
    @pulumi.getter(name="sharedVolumeSize")
    def shared_volume_size(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        select the desired user data (tcpdump captures, QKView data, etc.) volume in increments of 1 GB.
        The default value is 10 GB, with a minimum of 5 GB and a maximum of 20 GBAfter volume sizes are configured, their sizes can be increased but not reduced
        """
        return pulumi.get(self, "shared_volume_size")

    @shared_volume_size.setter
    def shared_volume_size(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "shared_volume_size", value)

    @property
    @pulumi.getter
    def slots(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.int]]]]:
        """
        List of integers.
        Specifies which slots with which the chassis partition should associated.
        """
        return pulumi.get(self, "slots")

    @slots.setter
    def slots(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.int]]]]):
        pulumi.set(self, "slots", value)

    @property
    @pulumi.getter
    def timeout(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        The number of seconds to wait for partition to transition to running state.
        """
        return pulumi.get(self, "timeout")

    @timeout.setter
    def timeout(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "timeout", value)


@pulumi.type_token("f5os:index/partition:Partition")
class Partition(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 configuration_volume_size: Optional[pulumi.Input[builtins.int]] = None,
                 enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 images_volume_size: Optional[pulumi.Input[builtins.int]] = None,
                 ipv4_mgmt_address: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_mgmt_gateway: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_mgmt_address: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_mgmt_gateway: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 os_version: Optional[pulumi.Input[builtins.str]] = None,
                 shared_volume_size: Optional[pulumi.Input[builtins.int]] = None,
                 slots: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.int]]]] = None,
                 timeout: Optional[pulumi.Input[builtins.int]] = None,
                 __props__=None):
        """
        Resource used for Manage VELOS chassis partition

        > **NOTE** `Partition` resource is used with Velos Chassis controller only, More info on [chassis partition](https://techdocs.f5.com/en-us/velos-1-5-0/velos-systems-administration-configuration/title-partition-mgmt.html#about-partitions).
        Provider `f5os` credentials will be chassis controller `host`,`username` and `password`

        ## Example Usage

        ```python
        import pulumi
        import pulumi_f5os as f5os

        # Manages F5OS partition
        velos_part = f5os.Partition("velos-part",
            name="TerraformPartition",
            os_version="1.3.1-5968",
            ipv4_mgmt_address="10.144.140.125/24",
            ipv4_mgmt_gateway="10.144.140.253",
            ipv6_mgmt_address="2001::1/64",
            ipv6_mgmt_gateway="2001::",
            slots=[
                1,
                2,
            ])
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.int] configuration_volume_size: select the desired configuration volume in increments of 1 GB.
               The default value is 10 GB, with a minimum of 5 GB and a maximum of 15 GB.After volume sizes are configured, their sizes can be increased but not reduced
        :param pulumi.Input[builtins.bool] enabled: Enables or disables partition.
        :param pulumi.Input[builtins.int] images_volume_size: select the desired storage volume for all tenant images in increments of 1 GB.
               The default value is 15 GB, with a minimum of 5 GB and a maximum of 50 GB.After volume sizes are configured, their sizes can be increased but not reduced
        :param pulumi.Input[builtins.str] ipv4_mgmt_address: Specifies the IPv4 address and subnet mask used to access the chassis partition.
               The address must be specified in CIDR notation e.g. 192.168.1.1/24.
        :param pulumi.Input[builtins.str] ipv4_mgmt_gateway: Specifies the IPv4 chassis partition management gateway.
        :param pulumi.Input[builtins.str] ipv6_mgmt_address: Specifies the IPv6 address and subnet mask used to access the chassis partition.
               The address must be specified in CIDR notation e.g. 2002::1234:abcd:ffff:c0a8:101/64.
               Required for create operations.
        :param pulumi.Input[builtins.str] ipv6_mgmt_gateway: Specifies the IPv6 chassis partition management gateway.
               Required for create operations.
        :param pulumi.Input[builtins.str] name: Name of the chassis partition.
               Partition names must consist only of alphanumerics (0-9, a-z, A-Z), must begin with a letter, and are limited to 31 characters.
        :param pulumi.Input[builtins.str] os_version: Specifies the partition F5OS-C OS Bundled version.(ISO image version)
        :param pulumi.Input[builtins.int] shared_volume_size: select the desired user data (tcpdump captures, QKView data, etc.) volume in increments of 1 GB.
               The default value is 10 GB, with a minimum of 5 GB and a maximum of 20 GBAfter volume sizes are configured, their sizes can be increased but not reduced
        :param pulumi.Input[Sequence[pulumi.Input[builtins.int]]] slots: List of integers.
               Specifies which slots with which the chassis partition should associated.
        :param pulumi.Input[builtins.int] timeout: The number of seconds to wait for partition to transition to running state.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[PartitionArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Resource used for Manage VELOS chassis partition

        > **NOTE** `Partition` resource is used with Velos Chassis controller only, More info on [chassis partition](https://techdocs.f5.com/en-us/velos-1-5-0/velos-systems-administration-configuration/title-partition-mgmt.html#about-partitions).
        Provider `f5os` credentials will be chassis controller `host`,`username` and `password`

        ## Example Usage

        ```python
        import pulumi
        import pulumi_f5os as f5os

        # Manages F5OS partition
        velos_part = f5os.Partition("velos-part",
            name="TerraformPartition",
            os_version="1.3.1-5968",
            ipv4_mgmt_address="10.144.140.125/24",
            ipv4_mgmt_gateway="10.144.140.253",
            ipv6_mgmt_address="2001::1/64",
            ipv6_mgmt_gateway="2001::",
            slots=[
                1,
                2,
            ])
        ```

        :param str resource_name: The name of the resource.
        :param PartitionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PartitionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 configuration_volume_size: Optional[pulumi.Input[builtins.int]] = None,
                 enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 images_volume_size: Optional[pulumi.Input[builtins.int]] = None,
                 ipv4_mgmt_address: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_mgmt_gateway: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_mgmt_address: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_mgmt_gateway: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 os_version: Optional[pulumi.Input[builtins.str]] = None,
                 shared_volume_size: Optional[pulumi.Input[builtins.int]] = None,
                 slots: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.int]]]] = None,
                 timeout: Optional[pulumi.Input[builtins.int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PartitionArgs.__new__(PartitionArgs)

            __props__.__dict__["configuration_volume_size"] = configuration_volume_size
            __props__.__dict__["enabled"] = enabled
            __props__.__dict__["images_volume_size"] = images_volume_size
            __props__.__dict__["ipv4_mgmt_address"] = ipv4_mgmt_address
            __props__.__dict__["ipv4_mgmt_gateway"] = ipv4_mgmt_gateway
            __props__.__dict__["ipv6_mgmt_address"] = ipv6_mgmt_address
            __props__.__dict__["ipv6_mgmt_gateway"] = ipv6_mgmt_gateway
            __props__.__dict__["name"] = name
            __props__.__dict__["os_version"] = os_version
            __props__.__dict__["shared_volume_size"] = shared_volume_size
            __props__.__dict__["slots"] = slots
            __props__.__dict__["timeout"] = timeout
        super(Partition, __self__).__init__(
            'f5os:index/partition:Partition',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            configuration_volume_size: Optional[pulumi.Input[builtins.int]] = None,
            enabled: Optional[pulumi.Input[builtins.bool]] = None,
            images_volume_size: Optional[pulumi.Input[builtins.int]] = None,
            ipv4_mgmt_address: Optional[pulumi.Input[builtins.str]] = None,
            ipv4_mgmt_gateway: Optional[pulumi.Input[builtins.str]] = None,
            ipv6_mgmt_address: Optional[pulumi.Input[builtins.str]] = None,
            ipv6_mgmt_gateway: Optional[pulumi.Input[builtins.str]] = None,
            name: Optional[pulumi.Input[builtins.str]] = None,
            os_version: Optional[pulumi.Input[builtins.str]] = None,
            shared_volume_size: Optional[pulumi.Input[builtins.int]] = None,
            slots: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.int]]]] = None,
            timeout: Optional[pulumi.Input[builtins.int]] = None) -> 'Partition':
        """
        Get an existing Partition resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.int] configuration_volume_size: select the desired configuration volume in increments of 1 GB.
               The default value is 10 GB, with a minimum of 5 GB and a maximum of 15 GB.After volume sizes are configured, their sizes can be increased but not reduced
        :param pulumi.Input[builtins.bool] enabled: Enables or disables partition.
        :param pulumi.Input[builtins.int] images_volume_size: select the desired storage volume for all tenant images in increments of 1 GB.
               The default value is 15 GB, with a minimum of 5 GB and a maximum of 50 GB.After volume sizes are configured, their sizes can be increased but not reduced
        :param pulumi.Input[builtins.str] ipv4_mgmt_address: Specifies the IPv4 address and subnet mask used to access the chassis partition.
               The address must be specified in CIDR notation e.g. 192.168.1.1/24.
        :param pulumi.Input[builtins.str] ipv4_mgmt_gateway: Specifies the IPv4 chassis partition management gateway.
        :param pulumi.Input[builtins.str] ipv6_mgmt_address: Specifies the IPv6 address and subnet mask used to access the chassis partition.
               The address must be specified in CIDR notation e.g. 2002::1234:abcd:ffff:c0a8:101/64.
               Required for create operations.
        :param pulumi.Input[builtins.str] ipv6_mgmt_gateway: Specifies the IPv6 chassis partition management gateway.
               Required for create operations.
        :param pulumi.Input[builtins.str] name: Name of the chassis partition.
               Partition names must consist only of alphanumerics (0-9, a-z, A-Z), must begin with a letter, and are limited to 31 characters.
        :param pulumi.Input[builtins.str] os_version: Specifies the partition F5OS-C OS Bundled version.(ISO image version)
        :param pulumi.Input[builtins.int] shared_volume_size: select the desired user data (tcpdump captures, QKView data, etc.) volume in increments of 1 GB.
               The default value is 10 GB, with a minimum of 5 GB and a maximum of 20 GBAfter volume sizes are configured, their sizes can be increased but not reduced
        :param pulumi.Input[Sequence[pulumi.Input[builtins.int]]] slots: List of integers.
               Specifies which slots with which the chassis partition should associated.
        :param pulumi.Input[builtins.int] timeout: The number of seconds to wait for partition to transition to running state.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PartitionState.__new__(_PartitionState)

        __props__.__dict__["configuration_volume_size"] = configuration_volume_size
        __props__.__dict__["enabled"] = enabled
        __props__.__dict__["images_volume_size"] = images_volume_size
        __props__.__dict__["ipv4_mgmt_address"] = ipv4_mgmt_address
        __props__.__dict__["ipv4_mgmt_gateway"] = ipv4_mgmt_gateway
        __props__.__dict__["ipv6_mgmt_address"] = ipv6_mgmt_address
        __props__.__dict__["ipv6_mgmt_gateway"] = ipv6_mgmt_gateway
        __props__.__dict__["name"] = name
        __props__.__dict__["os_version"] = os_version
        __props__.__dict__["shared_volume_size"] = shared_volume_size
        __props__.__dict__["slots"] = slots
        __props__.__dict__["timeout"] = timeout
        return Partition(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="configurationVolumeSize")
    def configuration_volume_size(self) -> pulumi.Output[builtins.int]:
        """
        select the desired configuration volume in increments of 1 GB.
        The default value is 10 GB, with a minimum of 5 GB and a maximum of 15 GB.After volume sizes are configured, their sizes can be increased but not reduced
        """
        return pulumi.get(self, "configuration_volume_size")

    @property
    @pulumi.getter
    def enabled(self) -> pulumi.Output[builtins.bool]:
        """
        Enables or disables partition.
        """
        return pulumi.get(self, "enabled")

    @property
    @pulumi.getter(name="imagesVolumeSize")
    def images_volume_size(self) -> pulumi.Output[builtins.int]:
        """
        select the desired storage volume for all tenant images in increments of 1 GB.
        The default value is 15 GB, with a minimum of 5 GB and a maximum of 50 GB.After volume sizes are configured, their sizes can be increased but not reduced
        """
        return pulumi.get(self, "images_volume_size")

    @property
    @pulumi.getter(name="ipv4MgmtAddress")
    def ipv4_mgmt_address(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Specifies the IPv4 address and subnet mask used to access the chassis partition.
        The address must be specified in CIDR notation e.g. 192.168.1.1/24.
        """
        return pulumi.get(self, "ipv4_mgmt_address")

    @property
    @pulumi.getter(name="ipv4MgmtGateway")
    def ipv4_mgmt_gateway(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Specifies the IPv4 chassis partition management gateway.
        """
        return pulumi.get(self, "ipv4_mgmt_gateway")

    @property
    @pulumi.getter(name="ipv6MgmtAddress")
    def ipv6_mgmt_address(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Specifies the IPv6 address and subnet mask used to access the chassis partition.
        The address must be specified in CIDR notation e.g. 2002::1234:abcd:ffff:c0a8:101/64.
        Required for create operations.
        """
        return pulumi.get(self, "ipv6_mgmt_address")

    @property
    @pulumi.getter(name="ipv6MgmtGateway")
    def ipv6_mgmt_gateway(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Specifies the IPv6 chassis partition management gateway.
        Required for create operations.
        """
        return pulumi.get(self, "ipv6_mgmt_gateway")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[builtins.str]:
        """
        Name of the chassis partition.
        Partition names must consist only of alphanumerics (0-9, a-z, A-Z), must begin with a letter, and are limited to 31 characters.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="osVersion")
    def os_version(self) -> pulumi.Output[builtins.str]:
        """
        Specifies the partition F5OS-C OS Bundled version.(ISO image version)
        """
        return pulumi.get(self, "os_version")

    @property
    @pulumi.getter(name="sharedVolumeSize")
    def shared_volume_size(self) -> pulumi.Output[builtins.int]:
        """
        select the desired user data (tcpdump captures, QKView data, etc.) volume in increments of 1 GB.
        The default value is 10 GB, with a minimum of 5 GB and a maximum of 20 GBAfter volume sizes are configured, their sizes can be increased but not reduced
        """
        return pulumi.get(self, "shared_volume_size")

    @property
    @pulumi.getter
    def slots(self) -> pulumi.Output[Sequence[builtins.int]]:
        """
        List of integers.
        Specifies which slots with which the chassis partition should associated.
        """
        return pulumi.get(self, "slots")

    @property
    @pulumi.getter
    def timeout(self) -> pulumi.Output[builtins.int]:
        """
        The number of seconds to wait for partition to transition to running state.
        """
        return pulumi.get(self, "timeout")

