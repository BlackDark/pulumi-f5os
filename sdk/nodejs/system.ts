// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Resource to manage generic system settings
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as f5os from "@pulumi/f5os";
 *
 * // Manages System settings on F5OS platforms
 * const systemSettings = new f5os.System("system_settings", {
 *     hostname: "system.example.net",
 *     motd: "Todays weather is great!",
 *     loginBanner: "Welcome to the system.",
 *     timezone: "UTC",
 *     cliTimeout: 3600,
 *     tokenLifetime: 15,
 *     sshdIdleTimeout: "1800",
 *     httpdCiphersuite: "ECDHE-RSA-AES256-GCM-SHA384",
 *     sshdCiphers: [
 *         "aes256-ctr",
 *         "aes256-gcm@openssh.com",
 *     ],
 *     sshdKexAlgs: ["ecdh-sha2-nistp384"],
 *     sshdMacAlgs: ["hmac-sha1-96"],
 *     sshdHkeyAlgs: ["ssh-rsa"],
 * });
 * ```
 */
export class System extends pulumi.CustomResource {
    /**
     * Get an existing System resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemState, opts?: pulumi.CustomResourceOptions): System {
        return new System(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'f5os:index/system:System';

    /**
     * Returns true if the given object is an instance of System.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is System {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === System.__pulumiType;
    }

    /**
     * CLI idle timeout
     */
    public readonly cliTimeout!: pulumi.Output<number | undefined>;
    /**
     * System Hostname
     */
    public readonly hostname!: pulumi.Output<string>;
    /**
     * HTTPS Ciphersuite in OpenSSL format
     */
    public readonly httpdCiphersuite!: pulumi.Output<string | undefined>;
    /**
     * Login Banner
     */
    public readonly loginBanner!: pulumi.Output<string | undefined>;
    /**
     * Message of the day
     */
    public readonly motd!: pulumi.Output<string | undefined>;
    /**
     * List of httpd ciphersuite in OpenSSL format
     */
    public readonly sshdCiphers!: pulumi.Output<string[] | undefined>;
    /**
     * List of the sshd host key algorithms in OpenSSH format
     */
    public readonly sshdHkeyAlgs!: pulumi.Output<string[] | undefined>;
    /**
     * SSH Idle timeout
     */
    public readonly sshdIdleTimeout!: pulumi.Output<string | undefined>;
    /**
     * List of sshd key exchange algorithms in OpenSSH format
     */
    public readonly sshdKexAlgs!: pulumi.Output<string[] | undefined>;
    /**
     * List of sshd Mac algorithms in OpenSSH format
     */
    public readonly sshdMacAlgs!: pulumi.Output<string[] | undefined>;
    /**
     * Timezone for the system per TZ database name
     */
    public readonly timezone!: pulumi.Output<string | undefined>;
    /**
     * Token lifetime length in minutes
     */
    public readonly tokenLifetime!: pulumi.Output<number | undefined>;

    /**
     * Create a System resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SystemArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemArgs | SystemState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemState | undefined;
            resourceInputs["cliTimeout"] = state ? state.cliTimeout : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["httpdCiphersuite"] = state ? state.httpdCiphersuite : undefined;
            resourceInputs["loginBanner"] = state ? state.loginBanner : undefined;
            resourceInputs["motd"] = state ? state.motd : undefined;
            resourceInputs["sshdCiphers"] = state ? state.sshdCiphers : undefined;
            resourceInputs["sshdHkeyAlgs"] = state ? state.sshdHkeyAlgs : undefined;
            resourceInputs["sshdIdleTimeout"] = state ? state.sshdIdleTimeout : undefined;
            resourceInputs["sshdKexAlgs"] = state ? state.sshdKexAlgs : undefined;
            resourceInputs["sshdMacAlgs"] = state ? state.sshdMacAlgs : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
            resourceInputs["tokenLifetime"] = state ? state.tokenLifetime : undefined;
        } else {
            const args = argsOrState as SystemArgs | undefined;
            if ((!args || args.hostname === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostname'");
            }
            resourceInputs["cliTimeout"] = args ? args.cliTimeout : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["httpdCiphersuite"] = args ? args.httpdCiphersuite : undefined;
            resourceInputs["loginBanner"] = args ? args.loginBanner : undefined;
            resourceInputs["motd"] = args ? args.motd : undefined;
            resourceInputs["sshdCiphers"] = args ? args.sshdCiphers : undefined;
            resourceInputs["sshdHkeyAlgs"] = args ? args.sshdHkeyAlgs : undefined;
            resourceInputs["sshdIdleTimeout"] = args ? args.sshdIdleTimeout : undefined;
            resourceInputs["sshdKexAlgs"] = args ? args.sshdKexAlgs : undefined;
            resourceInputs["sshdMacAlgs"] = args ? args.sshdMacAlgs : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["tokenLifetime"] = args ? args.tokenLifetime : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(System.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering System resources.
 */
export interface SystemState {
    /**
     * CLI idle timeout
     */
    cliTimeout?: pulumi.Input<number>;
    /**
     * System Hostname
     */
    hostname?: pulumi.Input<string>;
    /**
     * HTTPS Ciphersuite in OpenSSL format
     */
    httpdCiphersuite?: pulumi.Input<string>;
    /**
     * Login Banner
     */
    loginBanner?: pulumi.Input<string>;
    /**
     * Message of the day
     */
    motd?: pulumi.Input<string>;
    /**
     * List of httpd ciphersuite in OpenSSL format
     */
    sshdCiphers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of the sshd host key algorithms in OpenSSH format
     */
    sshdHkeyAlgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * SSH Idle timeout
     */
    sshdIdleTimeout?: pulumi.Input<string>;
    /**
     * List of sshd key exchange algorithms in OpenSSH format
     */
    sshdKexAlgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of sshd Mac algorithms in OpenSSH format
     */
    sshdMacAlgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Timezone for the system per TZ database name
     */
    timezone?: pulumi.Input<string>;
    /**
     * Token lifetime length in minutes
     */
    tokenLifetime?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a System resource.
 */
export interface SystemArgs {
    /**
     * CLI idle timeout
     */
    cliTimeout?: pulumi.Input<number>;
    /**
     * System Hostname
     */
    hostname: pulumi.Input<string>;
    /**
     * HTTPS Ciphersuite in OpenSSL format
     */
    httpdCiphersuite?: pulumi.Input<string>;
    /**
     * Login Banner
     */
    loginBanner?: pulumi.Input<string>;
    /**
     * Message of the day
     */
    motd?: pulumi.Input<string>;
    /**
     * List of httpd ciphersuite in OpenSSL format
     */
    sshdCiphers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of the sshd host key algorithms in OpenSSH format
     */
    sshdHkeyAlgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * SSH Idle timeout
     */
    sshdIdleTimeout?: pulumi.Input<string>;
    /**
     * List of sshd key exchange algorithms in OpenSSH format
     */
    sshdKexAlgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of sshd Mac algorithms in OpenSSH format
     */
    sshdMacAlgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Timezone for the system per TZ database name
     */
    timezone?: pulumi.Input<string>;
    /**
     * Token lifetime length in minutes
     */
    tokenLifetime?: pulumi.Input<number>;
}
