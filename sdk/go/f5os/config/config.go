// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/BlackDark/pulumi-f5os/sdk/go/f5os/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
)

var _ = internal.GetEnvOrDefault

// `disableTlsVerify` controls whether a client verifies the server's certificate chain and host name. default it is set to
// `true`. If `disableTlsVerify` is true, crypto/tls accepts any certificate presented by the server and any host name in
// that certificate. In this mode, TLS is susceptible to machine-in-the-middle attacks unless custom verification is used.
// can be provided by `DISABLE_TLS_VERIFY` environment variable. > **NOTE** If it is set to `false`, certificate/ca
// certificates should be added to `trusted store` of host where we are running this provider.
func GetDisableTlsVerify(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "f5os:disableTlsVerify")
}

// URI/Host details for F5os Device,can be provided via `F5OS_HOST` environment variable.
func GetHost(ctx *pulumi.Context) string {
	return config.Get(ctx, "f5os:host")
}

// Password for F5os Device,can be provided via `F5OS_PASSWORD` environment variable.
func GetPassword(ctx *pulumi.Context) string {
	return config.Get(ctx, "f5os:password")
}

// Port Number to be used to make API calls to HOST
func GetPort(ctx *pulumi.Context) int {
	return config.GetInt(ctx, "f5os:port")
}

// If this flag set to true,sending telemetry data to TEEM will be disabled,can be provided via `TEEM_DISABLE` environment
// variable.
func GetTeemDisable(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "f5os:teemDisable")
}

// Username for F5os Device,can be provided via `F5OS_USERNAME` environment variable.User provided here need to have
// required permission as per
// [UserManagement](https://techdocs.f5.com/en-us/f5os-a-1-4-0/f5-rseries-systems-administration-configuration/title-user-mgmt.html)
func GetUsername(ctx *pulumi.Context) string {
	return config.Get(ctx, "f5os:username")
}
