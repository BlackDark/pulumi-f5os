// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.F5os
{
    /// <summary>
    /// Resource used for Manage F5OS tenant on chassis partition/rSeries Appliance
    /// 
    /// &gt; **NOTE** `f5os.Tenant` resource is used with chassis partition/rSeries appliance, More info on [Tenant](https://techdocs.f5.com/en-us/velos-1-5-0/velos-systems-administration-configuration/title-tenant-management.html#title-tenant-management).
    /// Provider `f5os` credentials will be chassis partition/rSeries appliance `host`,`username` and `password`
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using F5os = Pulumi.F5os;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Manage F5OS Tenant
    ///     var test3 = new F5os.Tenant("test3", new()
    ///     {
    ///         Name = "testtenant-ecosys3",
    ///         ImageName = "BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle",
    ///         MgmtIp = "10.100.100.26",
    ///         MgmtGateway = "10.100.100.1",
    ///         MgmtPrefix = 24,
    ///         Type = "BIG-IP",
    ///         CpuCores = 8,
    ///         Nodes = new[]
    ///         {
    ///             1,
    ///         },
    ///         Vlans = new[]
    ///         {
    ///             1,
    ///             2,
    ///         },
    ///         RunningState = "deployed",
    ///         VirtualDiskSize = 82,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Tenant can be imported by specifying the tenant Name identifier.
    /// 
    /// ```sh
    /// $ pulumi import f5os:index/tenant:Tenant tenant-import testtenant
    /// ```
    /// </summary>
    [F5osResourceType("f5os:index/tenant:Tenant")]
    public partial class Tenant : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The number of vCPUs that should be added to the tenant.
        /// Required for create operations.
        /// </summary>
        [Output("cpuCores")]
        public Output<int> CpuCores { get; private set; } = null!;

        /// <summary>
        /// Whether crypto and compression hardware offload should be enabled on the tenant.
        /// We recommend it is enabled, otherwise crypto and compression may be processed in CPU.
        /// </summary>
        [Output("cryptos")]
        public Output<string> Cryptos { get; private set; } = null!;

        /// <summary>
        /// Configuring DAG Global IPv6 Prefix Length,value Range from `1` to `128`.Default is `128`.
        /// </summary>
        [Output("dagIpv6PrefixLength")]
        public Output<int> DagIpv6PrefixLength { get; private set; } = null!;

        /// <summary>
        /// Deployment file used for BIG-IP-Next .
        /// Required for if `type` is `BIG-IP-Next`.
        /// </summary>
        [Output("deploymentFile")]
        public Output<string?> DeploymentFile { get; private set; } = null!;

        /// <summary>
        /// Name of the tenant image to be used.
        /// Required for create operations
        /// </summary>
        [Output("imageName")]
        public Output<string> ImageName { get; private set; } = null!;

        /// <summary>
        /// Configure a BIG-IP tenant on these systems to use contiguous block of MAC allocation.
        /// Default value is `one`.
        /// </summary>
        [Output("macBlockSize")]
        public Output<string> MacBlockSize { get; private set; } = null!;

        /// <summary>
        /// The amount of memory that should be provided to the tenant in MB.
        /// More information on memory sizing for [Velos](https://clouddocs.f5.com/training/community/velos-training/html/velos_performance_and_sizing.html#memory-sizing)/[rSeries](https://clouddocs.f5.com/training/community/rseries-training/html/rseries_performance_and_sizing.html#memory-sizing)
        /// </summary>
        [Output("memory")]
        public Output<int?> Memory { get; private set; } = null!;

        /// <summary>
        /// Tenant management gateway.
        /// </summary>
        [Output("mgmtGateway")]
        public Output<string> MgmtGateway { get; private set; } = null!;

        /// <summary>
        /// IP address used to connect to the deployed tenant.
        /// Required for create operations.
        /// </summary>
        [Output("mgmtIp")]
        public Output<string> MgmtIp { get; private set; } = null!;

        /// <summary>
        /// Tenant management CIDR prefix.
        /// </summary>
        [Output("mgmtPrefix")]
        public Output<int> MgmtPrefix { get; private set; } = null!;

        /// <summary>
        /// Name of the tenant.
        /// The first character must be a letter.
        /// Only lowercase alphanumeric characters are allowed.
        /// No special or extended characters are allowed except for hyphens.
        /// The name cannot exceed 50 characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of integers. Specifies on which blades nodes the tenants are deployed.
        /// Required for create operations.
        /// For single blade platforms like rSeries only the value of 1 should be provided.
        /// </summary>
        [Output("nodes")]
        public Output<ImmutableArray<int>> Nodes { get; private set; } = null!;

        /// <summary>
        /// Desired running_state of the tenant.
        /// </summary>
        [Output("runningState")]
        public Output<string> RunningState { get; private set; } = null!;

        /// <summary>
        /// Tenant status
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The number of seconds to wait for image import to finish.
        /// </summary>
        [Output("timeout")]
        public Output<int> Timeout { get; private set; } = null!;

        /// <summary>
        /// Name of the tenant image to be used.
        /// Required for create operations
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Minimum virtual disk size required for Tenant deployment
        /// </summary>
        [Output("virtualDiskSize")]
        public Output<int> VirtualDiskSize { get; private set; } = null!;

        /// <summary>
        /// The existing VLAN IDs in the chassis partition that should be added to the tenant.
        /// The order of these VLANs is ignored.
        /// This module orders the VLANs automatically, if you deliberately re-order them in subsequent tasks, this module will not register a change.
        /// Required for create operations
        /// </summary>
        [Output("vlans")]
        public Output<ImmutableArray<int>> Vlans { get; private set; } = null!;


        /// <summary>
        /// Create a Tenant resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Tenant(string name, TenantArgs args, CustomResourceOptions? options = null)
            : base("f5os:index/tenant:Tenant", name, args ?? new TenantArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Tenant(string name, Input<string> id, TenantState? state = null, CustomResourceOptions? options = null)
            : base("f5os:index/tenant:Tenant", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Tenant resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Tenant Get(string name, Input<string> id, TenantState? state = null, CustomResourceOptions? options = null)
        {
            return new Tenant(name, id, state, options);
        }
    }

    public sealed class TenantArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of vCPUs that should be added to the tenant.
        /// Required for create operations.
        /// </summary>
        [Input("cpuCores", required: true)]
        public Input<int> CpuCores { get; set; } = null!;

        /// <summary>
        /// Whether crypto and compression hardware offload should be enabled on the tenant.
        /// We recommend it is enabled, otherwise crypto and compression may be processed in CPU.
        /// </summary>
        [Input("cryptos")]
        public Input<string>? Cryptos { get; set; }

        /// <summary>
        /// Configuring DAG Global IPv6 Prefix Length,value Range from `1` to `128`.Default is `128`.
        /// </summary>
        [Input("dagIpv6PrefixLength")]
        public Input<int>? DagIpv6PrefixLength { get; set; }

        /// <summary>
        /// Deployment file used for BIG-IP-Next .
        /// Required for if `type` is `BIG-IP-Next`.
        /// </summary>
        [Input("deploymentFile")]
        public Input<string>? DeploymentFile { get; set; }

        /// <summary>
        /// Name of the tenant image to be used.
        /// Required for create operations
        /// </summary>
        [Input("imageName", required: true)]
        public Input<string> ImageName { get; set; } = null!;

        /// <summary>
        /// Configure a BIG-IP tenant on these systems to use contiguous block of MAC allocation.
        /// Default value is `one`.
        /// </summary>
        [Input("macBlockSize")]
        public Input<string>? MacBlockSize { get; set; }

        /// <summary>
        /// The amount of memory that should be provided to the tenant in MB.
        /// More information on memory sizing for [Velos](https://clouddocs.f5.com/training/community/velos-training/html/velos_performance_and_sizing.html#memory-sizing)/[rSeries](https://clouddocs.f5.com/training/community/rseries-training/html/rseries_performance_and_sizing.html#memory-sizing)
        /// </summary>
        [Input("memory")]
        public Input<int>? Memory { get; set; }

        /// <summary>
        /// Tenant management gateway.
        /// </summary>
        [Input("mgmtGateway", required: true)]
        public Input<string> MgmtGateway { get; set; } = null!;

        /// <summary>
        /// IP address used to connect to the deployed tenant.
        /// Required for create operations.
        /// </summary>
        [Input("mgmtIp", required: true)]
        public Input<string> MgmtIp { get; set; } = null!;

        /// <summary>
        /// Tenant management CIDR prefix.
        /// </summary>
        [Input("mgmtPrefix", required: true)]
        public Input<int> MgmtPrefix { get; set; } = null!;

        /// <summary>
        /// Name of the tenant.
        /// The first character must be a letter.
        /// Only lowercase alphanumeric characters are allowed.
        /// No special or extended characters are allowed except for hyphens.
        /// The name cannot exceed 50 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("nodes")]
        private InputList<int>? _nodes;

        /// <summary>
        /// List of integers. Specifies on which blades nodes the tenants are deployed.
        /// Required for create operations.
        /// For single blade platforms like rSeries only the value of 1 should be provided.
        /// </summary>
        public InputList<int> Nodes
        {
            get => _nodes ?? (_nodes = new InputList<int>());
            set => _nodes = value;
        }

        /// <summary>
        /// Desired running_state of the tenant.
        /// </summary>
        [Input("runningState")]
        public Input<string>? RunningState { get; set; }

        /// <summary>
        /// The number of seconds to wait for image import to finish.
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        /// <summary>
        /// Name of the tenant image to be used.
        /// Required for create operations
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Minimum virtual disk size required for Tenant deployment
        /// </summary>
        [Input("virtualDiskSize", required: true)]
        public Input<int> VirtualDiskSize { get; set; } = null!;

        [Input("vlans")]
        private InputList<int>? _vlans;

        /// <summary>
        /// The existing VLAN IDs in the chassis partition that should be added to the tenant.
        /// The order of these VLANs is ignored.
        /// This module orders the VLANs automatically, if you deliberately re-order them in subsequent tasks, this module will not register a change.
        /// Required for create operations
        /// </summary>
        public InputList<int> Vlans
        {
            get => _vlans ?? (_vlans = new InputList<int>());
            set => _vlans = value;
        }

        public TenantArgs()
        {
        }
        public static new TenantArgs Empty => new TenantArgs();
    }

    public sealed class TenantState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of vCPUs that should be added to the tenant.
        /// Required for create operations.
        /// </summary>
        [Input("cpuCores")]
        public Input<int>? CpuCores { get; set; }

        /// <summary>
        /// Whether crypto and compression hardware offload should be enabled on the tenant.
        /// We recommend it is enabled, otherwise crypto and compression may be processed in CPU.
        /// </summary>
        [Input("cryptos")]
        public Input<string>? Cryptos { get; set; }

        /// <summary>
        /// Configuring DAG Global IPv6 Prefix Length,value Range from `1` to `128`.Default is `128`.
        /// </summary>
        [Input("dagIpv6PrefixLength")]
        public Input<int>? DagIpv6PrefixLength { get; set; }

        /// <summary>
        /// Deployment file used for BIG-IP-Next .
        /// Required for if `type` is `BIG-IP-Next`.
        /// </summary>
        [Input("deploymentFile")]
        public Input<string>? DeploymentFile { get; set; }

        /// <summary>
        /// Name of the tenant image to be used.
        /// Required for create operations
        /// </summary>
        [Input("imageName")]
        public Input<string>? ImageName { get; set; }

        /// <summary>
        /// Configure a BIG-IP tenant on these systems to use contiguous block of MAC allocation.
        /// Default value is `one`.
        /// </summary>
        [Input("macBlockSize")]
        public Input<string>? MacBlockSize { get; set; }

        /// <summary>
        /// The amount of memory that should be provided to the tenant in MB.
        /// More information on memory sizing for [Velos](https://clouddocs.f5.com/training/community/velos-training/html/velos_performance_and_sizing.html#memory-sizing)/[rSeries](https://clouddocs.f5.com/training/community/rseries-training/html/rseries_performance_and_sizing.html#memory-sizing)
        /// </summary>
        [Input("memory")]
        public Input<int>? Memory { get; set; }

        /// <summary>
        /// Tenant management gateway.
        /// </summary>
        [Input("mgmtGateway")]
        public Input<string>? MgmtGateway { get; set; }

        /// <summary>
        /// IP address used to connect to the deployed tenant.
        /// Required for create operations.
        /// </summary>
        [Input("mgmtIp")]
        public Input<string>? MgmtIp { get; set; }

        /// <summary>
        /// Tenant management CIDR prefix.
        /// </summary>
        [Input("mgmtPrefix")]
        public Input<int>? MgmtPrefix { get; set; }

        /// <summary>
        /// Name of the tenant.
        /// The first character must be a letter.
        /// Only lowercase alphanumeric characters are allowed.
        /// No special or extended characters are allowed except for hyphens.
        /// The name cannot exceed 50 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("nodes")]
        private InputList<int>? _nodes;

        /// <summary>
        /// List of integers. Specifies on which blades nodes the tenants are deployed.
        /// Required for create operations.
        /// For single blade platforms like rSeries only the value of 1 should be provided.
        /// </summary>
        public InputList<int> Nodes
        {
            get => _nodes ?? (_nodes = new InputList<int>());
            set => _nodes = value;
        }

        /// <summary>
        /// Desired running_state of the tenant.
        /// </summary>
        [Input("runningState")]
        public Input<string>? RunningState { get; set; }

        /// <summary>
        /// Tenant status
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The number of seconds to wait for image import to finish.
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        /// <summary>
        /// Name of the tenant image to be used.
        /// Required for create operations
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Minimum virtual disk size required for Tenant deployment
        /// </summary>
        [Input("virtualDiskSize")]
        public Input<int>? VirtualDiskSize { get; set; }

        [Input("vlans")]
        private InputList<int>? _vlans;

        /// <summary>
        /// The existing VLAN IDs in the chassis partition that should be added to the tenant.
        /// The order of these VLANs is ignored.
        /// This module orders the VLANs automatically, if you deliberately re-order them in subsequent tasks, this module will not register a change.
        /// Required for create operations
        /// </summary>
        public InputList<int> Vlans
        {
            get => _vlans ?? (_vlans = new InputList<int>());
            set => _vlans = value;
        }

        public TenantState()
        {
        }
        public static new TenantState Empty => new TenantState();
    }
}
