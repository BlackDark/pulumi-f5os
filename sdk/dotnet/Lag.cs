// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.F5os
{
    /// <summary>
    /// Resource to Manage network Link Aggregation Group (LAG) interfaces on F5OS systems like VELOS chassis partitions or rSeries platforms
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using F5os = Pulumi.F5os;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testLag = new F5os.Lag("test_lag", new()
    ///     {
    ///         Name = "test_lag",
    ///         Members = new[]
    ///         {
    ///             "1.0",
    ///         },
    ///         NativeVlan = 5,
    ///         TrunkVlans = new[]
    ///         {
    ///             1,
    ///             2,
    ///             3,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// LAG Interface can be imported by specifying the LAG Interface name
    /// 
    /// ```sh
    /// $ pulumi import f5os:index/lag:Lag test-import test-lag
    /// ```
    /// </summary>
    [F5osResourceType("f5os:index/lag:Lag")]
    public partial class Lag : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The LACP interval of the interface to be created.
        /// </summary>
        [Output("interval")]
        public Output<string> Interval { get; private set; } = null!;

        /// <summary>
        /// List of physical interfaces that are members of the LAG. The members should be present on F5 platform and they shouldn't have any VLANs attached to it
        /// </summary>
        [Output("members")]
        public Output<ImmutableArray<string>> Members { get; private set; } = null!;

        /// <summary>
        /// The LACP mode of the interface to be created.
        /// </summary>
        [Output("mode")]
        public Output<string> Mode { get; private set; } = null!;

        /// <summary>
        /// Name of the Link Aggregation Group interface (LAG) interface to configure
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Configures the VLAN ID to associate with LAG interface.
        /// The `native_vlan` parameter is used for untagged traffic.
        /// </summary>
        [Output("nativeVlan")]
        public Output<int?> NativeVlan { get; private set; } = null!;

        /// <summary>
        /// Operational state of the LAG interface.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Configures multiple VLAN IDs to associate with the LAG interface.
        /// The `trunk_vlans` parameter is used for tagged traffic
        /// </summary>
        [Output("trunkVlans")]
        public Output<ImmutableArray<int>> TrunkVlans { get; private set; } = null!;


        /// <summary>
        /// Create a Lag resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Lag(string name, LagArgs? args = null, CustomResourceOptions? options = null)
            : base("f5os:index/lag:Lag", name, args ?? new LagArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Lag(string name, Input<string> id, LagState? state = null, CustomResourceOptions? options = null)
            : base("f5os:index/lag:Lag", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Lag resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Lag Get(string name, Input<string> id, LagState? state = null, CustomResourceOptions? options = null)
        {
            return new Lag(name, id, state, options);
        }
    }

    public sealed class LagArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The LACP interval of the interface to be created.
        /// </summary>
        [Input("interval")]
        public Input<string>? Interval { get; set; }

        [Input("members")]
        private InputList<string>? _members;

        /// <summary>
        /// List of physical interfaces that are members of the LAG. The members should be present on F5 platform and they shouldn't have any VLANs attached to it
        /// </summary>
        public InputList<string> Members
        {
            get => _members ?? (_members = new InputList<string>());
            set => _members = value;
        }

        /// <summary>
        /// The LACP mode of the interface to be created.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// Name of the Link Aggregation Group interface (LAG) interface to configure
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Configures the VLAN ID to associate with LAG interface.
        /// The `native_vlan` parameter is used for untagged traffic.
        /// </summary>
        [Input("nativeVlan")]
        public Input<int>? NativeVlan { get; set; }

        [Input("trunkVlans")]
        private InputList<int>? _trunkVlans;

        /// <summary>
        /// Configures multiple VLAN IDs to associate with the LAG interface.
        /// The `trunk_vlans` parameter is used for tagged traffic
        /// </summary>
        public InputList<int> TrunkVlans
        {
            get => _trunkVlans ?? (_trunkVlans = new InputList<int>());
            set => _trunkVlans = value;
        }

        public LagArgs()
        {
        }
        public static new LagArgs Empty => new LagArgs();
    }

    public sealed class LagState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The LACP interval of the interface to be created.
        /// </summary>
        [Input("interval")]
        public Input<string>? Interval { get; set; }

        [Input("members")]
        private InputList<string>? _members;

        /// <summary>
        /// List of physical interfaces that are members of the LAG. The members should be present on F5 platform and they shouldn't have any VLANs attached to it
        /// </summary>
        public InputList<string> Members
        {
            get => _members ?? (_members = new InputList<string>());
            set => _members = value;
        }

        /// <summary>
        /// The LACP mode of the interface to be created.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// Name of the Link Aggregation Group interface (LAG) interface to configure
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Configures the VLAN ID to associate with LAG interface.
        /// The `native_vlan` parameter is used for untagged traffic.
        /// </summary>
        [Input("nativeVlan")]
        public Input<int>? NativeVlan { get; set; }

        /// <summary>
        /// Operational state of the LAG interface.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("trunkVlans")]
        private InputList<int>? _trunkVlans;

        /// <summary>
        /// Configures multiple VLAN IDs to associate with the LAG interface.
        /// The `trunk_vlans` parameter is used for tagged traffic
        /// </summary>
        public InputList<int> TrunkVlans
        {
            get => _trunkVlans ?? (_trunkVlans = new InputList<int>());
            set => _trunkVlans = value;
        }

        public LagState()
        {
        }
        public static new LagState Empty => new LagState();
    }
}
