// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.F5os
{
    public static class GetTenantImage
    {
        /// <summary>
        /// Get information about the tenant Image on f5os platform.
        /// 
        /// Use this data source to get information, whether image available on platform or not
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using F5os = Pulumi.F5os;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = F5os.GetTenantImage.Invoke(new()
        ///     {
        ///         ImageName = "BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTenantImageResult> InvokeAsync(GetTenantImageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTenantImageResult>("f5os:index/getTenantImage:getTenantImage", args ?? new GetTenantImageArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about the tenant Image on f5os platform.
        /// 
        /// Use this data source to get information, whether image available on platform or not
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using F5os = Pulumi.F5os;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = F5os.GetTenantImage.Invoke(new()
        ///     {
        ///         ImageName = "BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTenantImageResult> Invoke(GetTenantImageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTenantImageResult>("f5os:index/getTenantImage:getTenantImage", args ?? new GetTenantImageInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about the tenant Image on f5os platform.
        /// 
        /// Use this data source to get information, whether image available on platform or not
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using F5os = Pulumi.F5os;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = F5os.GetTenantImage.Invoke(new()
        ///     {
        ///         ImageName = "BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTenantImageResult> Invoke(GetTenantImageInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTenantImageResult>("f5os:index/getTenantImage:getTenantImage", args ?? new GetTenantImageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTenantImageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the tenant image to check
        /// </summary>
        [Input("imageName", required: true)]
        public string ImageName { get; set; } = null!;

        public GetTenantImageArgs()
        {
        }
        public static new GetTenantImageArgs Empty => new GetTenantImageArgs();
    }

    public sealed class GetTenantImageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the tenant image to check
        /// </summary>
        [Input("imageName", required: true)]
        public Input<string> ImageName { get; set; } = null!;

        public GetTenantImageInvokeArgs()
        {
        }
        public static new GetTenantImageInvokeArgs Empty => new GetTenantImageInvokeArgs();
    }


    [OutputType]
    public sealed class GetTenantImageResult
    {
        /// <summary>
        /// Unique identifier of this data source
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the tenant image to check
        /// </summary>
        public readonly string ImageName;
        /// <summary>
        /// Status of Image on the F5OS Platforms
        /// </summary>
        public readonly string ImageStatus;

        [OutputConstructor]
        private GetTenantImageResult(
            string id,

            string imageName,

            string imageStatus)
        {
            Id = id;
            ImageName = imageName;
            ImageStatus = imageStatus;
        }
    }
}
