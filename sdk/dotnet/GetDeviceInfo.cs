// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.F5os
{
    public static class GetDeviceInfo
    {
        /// <summary>
        /// Get Information about the various components of F5OS device. Currently the various components whose information is fetched are `interfaces`, `vlans`, `tenant images`, `controller images` and `partition images`. Information about partition and controller images can only be fetched from the Velos controller so please set you provider block to point to a Velos controller when you want information for partition and controller images
        /// </summary>
        public static Task<GetDeviceInfoResult> InvokeAsync(GetDeviceInfoArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDeviceInfoResult>("f5os:index/getDeviceInfo:getDeviceInfo", args ?? new GetDeviceInfoArgs(), options.WithDefaults());

        /// <summary>
        /// Get Information about the various components of F5OS device. Currently the various components whose information is fetched are `interfaces`, `vlans`, `tenant images`, `controller images` and `partition images`. Information about partition and controller images can only be fetched from the Velos controller so please set you provider block to point to a Velos controller when you want information for partition and controller images
        /// </summary>
        public static Output<GetDeviceInfoResult> Invoke(GetDeviceInfoInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeviceInfoResult>("f5os:index/getDeviceInfo:getDeviceInfo", args ?? new GetDeviceInfoInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get Information about the various components of F5OS device. Currently the various components whose information is fetched are `interfaces`, `vlans`, `tenant images`, `controller images` and `partition images`. Information about partition and controller images can only be fetched from the Velos controller so please set you provider block to point to a Velos controller when you want information for partition and controller images
        /// </summary>
        public static Output<GetDeviceInfoResult> Invoke(GetDeviceInfoInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeviceInfoResult>("f5os:index/getDeviceInfo:getDeviceInfo", args ?? new GetDeviceInfoInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeviceInfoArgs : global::Pulumi.InvokeArgs
    {
        [Input("gatherInfoOfs", required: true)]
        private List<string>? _gatherInfoOfs;

        /// <summary>
        /// List of components for which to gather information. This attribute accept the following values:
        /// [`all`,`interfaces`,`vlans`,`tenant_images`,`partition_images`,`controller_images`,`!all`,`!interfaces`,`!vlans`,`!tenant_images`,`!partition_images`,`!controller_images`]
        /// </summary>
        public List<string> GatherInfoOfs
        {
            get => _gatherInfoOfs ?? (_gatherInfoOfs = new List<string>());
            set => _gatherInfoOfs = value;
        }

        public GetDeviceInfoArgs()
        {
        }
        public static new GetDeviceInfoArgs Empty => new GetDeviceInfoArgs();
    }

    public sealed class GetDeviceInfoInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("gatherInfoOfs", required: true)]
        private InputList<string>? _gatherInfoOfs;

        /// <summary>
        /// List of components for which to gather information. This attribute accept the following values:
        /// [`all`,`interfaces`,`vlans`,`tenant_images`,`partition_images`,`controller_images`,`!all`,`!interfaces`,`!vlans`,`!tenant_images`,`!partition_images`,`!controller_images`]
        /// </summary>
        public InputList<string> GatherInfoOfs
        {
            get => _gatherInfoOfs ?? (_gatherInfoOfs = new InputList<string>());
            set => _gatherInfoOfs = value;
        }

        public GetDeviceInfoInvokeArgs()
        {
        }
        public static new GetDeviceInfoInvokeArgs Empty => new GetDeviceInfoInvokeArgs();
    }


    [OutputType]
    public sealed class GetDeviceInfoResult
    {
        /// <summary>
        /// Information about existing controller images
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeviceInfoControllerImageResult> ControllerImages;
        /// <summary>
        /// List of components for which to gather information. This attribute accept the following values:
        /// [`all`,`interfaces`,`vlans`,`tenant_images`,`partition_images`,`controller_images`,`!all`,`!interfaces`,`!vlans`,`!tenant_images`,`!partition_images`,`!controller_images`]
        /// </summary>
        public readonly ImmutableArray<string> GatherInfoOfs;
        /// <summary>
        /// Identifier for Device Info
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Information about existing interfaces
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeviceInfoInterfaceResult> Interfaces;
        /// <summary>
        /// Device info
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeviceInfoPartitionImageResult> PartitionImages;
        /// <summary>
        /// Information about existing tenant images
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeviceInfoTenantImageResult> TenantImages;
        /// <summary>
        /// Information about existing vlans
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeviceInfoVlanResult> Vlans;

        [OutputConstructor]
        private GetDeviceInfoResult(
            ImmutableArray<Outputs.GetDeviceInfoControllerImageResult> controllerImages,

            ImmutableArray<string> gatherInfoOfs,

            string id,

            ImmutableArray<Outputs.GetDeviceInfoInterfaceResult> interfaces,

            ImmutableArray<Outputs.GetDeviceInfoPartitionImageResult> partitionImages,

            ImmutableArray<Outputs.GetDeviceInfoTenantImageResult> tenantImages,

            ImmutableArray<Outputs.GetDeviceInfoVlanResult> vlans)
        {
            ControllerImages = controllerImages;
            GatherInfoOfs = gatherInfoOfs;
            Id = id;
            Interfaces = interfaces;
            PartitionImages = partitionImages;
            TenantImages = tenantImages;
            Vlans = vlans;
        }
    }
}
