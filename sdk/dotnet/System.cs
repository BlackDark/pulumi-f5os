// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.F5os
{
    /// <summary>
    /// Resource to manage generic system settings
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using F5os = Pulumi.F5os;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Manages System settings on F5OS platforms
    ///     var systemSettings = new F5os.System("system_settings", new()
    ///     {
    ///         Hostname = "system.example.net",
    ///         Motd = "Todays weather is great!",
    ///         LoginBanner = "Welcome to the system.",
    ///         Timezone = "UTC",
    ///         CliTimeout = 3600,
    ///         TokenLifetime = 15,
    ///         SshdIdleTimeout = "1800",
    ///         HttpdCiphersuite = "ECDHE-RSA-AES256-GCM-SHA384",
    ///         SshdCiphers = new[]
    ///         {
    ///             "aes256-ctr",
    ///             "aes256-gcm@openssh.com",
    ///         },
    ///         SshdKexAlgs = new[]
    ///         {
    ///             "ecdh-sha2-nistp384",
    ///         },
    ///         SshdMacAlgs = new[]
    ///         {
    ///             "hmac-sha1-96",
    ///         },
    ///         SshdHkeyAlgs = new[]
    ///         {
    ///             "ssh-rsa",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [F5osResourceType("f5os:index/system:System")]
    public partial class System : global::Pulumi.CustomResource
    {
        /// <summary>
        /// CLI idle timeout
        /// </summary>
        [Output("cliTimeout")]
        public Output<int?> CliTimeout { get; private set; } = null!;

        /// <summary>
        /// System Hostname
        /// </summary>
        [Output("hostname")]
        public Output<string> Hostname { get; private set; } = null!;

        /// <summary>
        /// HTTPS Ciphersuite in OpenSSL format
        /// </summary>
        [Output("httpdCiphersuite")]
        public Output<string?> HttpdCiphersuite { get; private set; } = null!;

        /// <summary>
        /// Login Banner
        /// </summary>
        [Output("loginBanner")]
        public Output<string?> LoginBanner { get; private set; } = null!;

        /// <summary>
        /// Message of the day
        /// </summary>
        [Output("motd")]
        public Output<string?> Motd { get; private set; } = null!;

        /// <summary>
        /// List of httpd ciphersuite in OpenSSL format
        /// </summary>
        [Output("sshdCiphers")]
        public Output<ImmutableArray<string>> SshdCiphers { get; private set; } = null!;

        /// <summary>
        /// List of the sshd host key algorithms in OpenSSH format
        /// </summary>
        [Output("sshdHkeyAlgs")]
        public Output<ImmutableArray<string>> SshdHkeyAlgs { get; private set; } = null!;

        /// <summary>
        /// SSH Idle timeout
        /// </summary>
        [Output("sshdIdleTimeout")]
        public Output<string?> SshdIdleTimeout { get; private set; } = null!;

        /// <summary>
        /// List of sshd key exchange algorithms in OpenSSH format
        /// </summary>
        [Output("sshdKexAlgs")]
        public Output<ImmutableArray<string>> SshdKexAlgs { get; private set; } = null!;

        /// <summary>
        /// List of sshd Mac algorithms in OpenSSH format
        /// </summary>
        [Output("sshdMacAlgs")]
        public Output<ImmutableArray<string>> SshdMacAlgs { get; private set; } = null!;

        /// <summary>
        /// Timezone for the system per TZ database name
        /// </summary>
        [Output("timezone")]
        public Output<string?> Timezone { get; private set; } = null!;

        /// <summary>
        /// Token lifetime length in minutes
        /// </summary>
        [Output("tokenLifetime")]
        public Output<int?> TokenLifetime { get; private set; } = null!;


        /// <summary>
        /// Create a System resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public System(string name, SystemArgs args, CustomResourceOptions? options = null)
            : base("f5os:index/system:System", name, args ?? new SystemArgs(), MakeResourceOptions(options, ""))
        {
        }

        private System(string name, Input<string> id, SystemState? state = null, CustomResourceOptions? options = null)
            : base("f5os:index/system:System", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing System resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static System Get(string name, Input<string> id, SystemState? state = null, CustomResourceOptions? options = null)
        {
            return new System(name, id, state, options);
        }
    }

    public sealed class SystemArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// CLI idle timeout
        /// </summary>
        [Input("cliTimeout")]
        public Input<int>? CliTimeout { get; set; }

        /// <summary>
        /// System Hostname
        /// </summary>
        [Input("hostname", required: true)]
        public Input<string> Hostname { get; set; } = null!;

        /// <summary>
        /// HTTPS Ciphersuite in OpenSSL format
        /// </summary>
        [Input("httpdCiphersuite")]
        public Input<string>? HttpdCiphersuite { get; set; }

        /// <summary>
        /// Login Banner
        /// </summary>
        [Input("loginBanner")]
        public Input<string>? LoginBanner { get; set; }

        /// <summary>
        /// Message of the day
        /// </summary>
        [Input("motd")]
        public Input<string>? Motd { get; set; }

        [Input("sshdCiphers")]
        private InputList<string>? _sshdCiphers;

        /// <summary>
        /// List of httpd ciphersuite in OpenSSL format
        /// </summary>
        public InputList<string> SshdCiphers
        {
            get => _sshdCiphers ?? (_sshdCiphers = new InputList<string>());
            set => _sshdCiphers = value;
        }

        [Input("sshdHkeyAlgs")]
        private InputList<string>? _sshdHkeyAlgs;

        /// <summary>
        /// List of the sshd host key algorithms in OpenSSH format
        /// </summary>
        public InputList<string> SshdHkeyAlgs
        {
            get => _sshdHkeyAlgs ?? (_sshdHkeyAlgs = new InputList<string>());
            set => _sshdHkeyAlgs = value;
        }

        /// <summary>
        /// SSH Idle timeout
        /// </summary>
        [Input("sshdIdleTimeout")]
        public Input<string>? SshdIdleTimeout { get; set; }

        [Input("sshdKexAlgs")]
        private InputList<string>? _sshdKexAlgs;

        /// <summary>
        /// List of sshd key exchange algorithms in OpenSSH format
        /// </summary>
        public InputList<string> SshdKexAlgs
        {
            get => _sshdKexAlgs ?? (_sshdKexAlgs = new InputList<string>());
            set => _sshdKexAlgs = value;
        }

        [Input("sshdMacAlgs")]
        private InputList<string>? _sshdMacAlgs;

        /// <summary>
        /// List of sshd Mac algorithms in OpenSSH format
        /// </summary>
        public InputList<string> SshdMacAlgs
        {
            get => _sshdMacAlgs ?? (_sshdMacAlgs = new InputList<string>());
            set => _sshdMacAlgs = value;
        }

        /// <summary>
        /// Timezone for the system per TZ database name
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        /// <summary>
        /// Token lifetime length in minutes
        /// </summary>
        [Input("tokenLifetime")]
        public Input<int>? TokenLifetime { get; set; }

        public SystemArgs()
        {
        }
        public static new SystemArgs Empty => new SystemArgs();
    }

    public sealed class SystemState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// CLI idle timeout
        /// </summary>
        [Input("cliTimeout")]
        public Input<int>? CliTimeout { get; set; }

        /// <summary>
        /// System Hostname
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// HTTPS Ciphersuite in OpenSSL format
        /// </summary>
        [Input("httpdCiphersuite")]
        public Input<string>? HttpdCiphersuite { get; set; }

        /// <summary>
        /// Login Banner
        /// </summary>
        [Input("loginBanner")]
        public Input<string>? LoginBanner { get; set; }

        /// <summary>
        /// Message of the day
        /// </summary>
        [Input("motd")]
        public Input<string>? Motd { get; set; }

        [Input("sshdCiphers")]
        private InputList<string>? _sshdCiphers;

        /// <summary>
        /// List of httpd ciphersuite in OpenSSL format
        /// </summary>
        public InputList<string> SshdCiphers
        {
            get => _sshdCiphers ?? (_sshdCiphers = new InputList<string>());
            set => _sshdCiphers = value;
        }

        [Input("sshdHkeyAlgs")]
        private InputList<string>? _sshdHkeyAlgs;

        /// <summary>
        /// List of the sshd host key algorithms in OpenSSH format
        /// </summary>
        public InputList<string> SshdHkeyAlgs
        {
            get => _sshdHkeyAlgs ?? (_sshdHkeyAlgs = new InputList<string>());
            set => _sshdHkeyAlgs = value;
        }

        /// <summary>
        /// SSH Idle timeout
        /// </summary>
        [Input("sshdIdleTimeout")]
        public Input<string>? SshdIdleTimeout { get; set; }

        [Input("sshdKexAlgs")]
        private InputList<string>? _sshdKexAlgs;

        /// <summary>
        /// List of sshd key exchange algorithms in OpenSSH format
        /// </summary>
        public InputList<string> SshdKexAlgs
        {
            get => _sshdKexAlgs ?? (_sshdKexAlgs = new InputList<string>());
            set => _sshdKexAlgs = value;
        }

        [Input("sshdMacAlgs")]
        private InputList<string>? _sshdMacAlgs;

        /// <summary>
        /// List of sshd Mac algorithms in OpenSSH format
        /// </summary>
        public InputList<string> SshdMacAlgs
        {
            get => _sshdMacAlgs ?? (_sshdMacAlgs = new InputList<string>());
            set => _sshdMacAlgs = value;
        }

        /// <summary>
        /// Timezone for the system per TZ database name
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        /// <summary>
        /// Token lifetime length in minutes
        /// </summary>
        [Input("tokenLifetime")]
        public Input<int>? TokenLifetime { get; set; }

        public SystemState()
        {
        }
        public static new SystemState Empty => new SystemState();
    }
}
