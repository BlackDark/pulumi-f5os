{
    "name": "f5os",
    "description": "A Pulumi package for creating and managing f5os cloud resources.",
    "keywords": [
        "f5os",
        "category/cloud"
    ],
    "homepage": "https://github.com/BlackDark/pulumi-f5os",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`f5os` Terraform Provider](https://github.com/BlackDark/terraform-provider-f5os).",
    "repository": "https://github.com/BlackDark/pulumi-f5os",
    "publisher": "BlackDark",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/BlackDark/pulumi-f5os/sdk/go/f5os",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing f5os cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/BlackDark/terraform-provider-f5os)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-f5os` repo](https://github.com/BlackDark/pulumi-f5os/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-f5os` repo](https://github.com/BlackDark/terraform-provider-f5os/issues).",
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/BlackDark/terraform-provider-f5os)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-f5os` repo](https://github.com/BlackDark/pulumi-f5os/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-f5os` repo](https://github.com/BlackDark/terraform-provider-f5os/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "disableTlsVerify": {
                "type": "boolean",
                "description": "`disable_tls_verify` controls whether a client verifies the server's certificate chain and host name. default it is set\nto `true`. If `disable_tls_verify` is true, crypto/tls accepts any certificate presented by the server and any host name\nin that certificate. In this mode, TLS is susceptible to machine-in-the-middle attacks unless custom verification is\nused. can be provided by `DISABLE_TLS_VERIFY` environment variable. \u003e **NOTE** If it is set to `false`, certificate/ca\ncertificates should be added to `trusted store` of host where we are running this provider.\n"
            },
            "host": {
                "type": "string",
                "description": "URI/Host details for F5os Device,can be provided via `F5OS_HOST` environment variable.\n"
            },
            "password": {
                "type": "string",
                "description": "Password for F5os Device,can be provided via `F5OS_PASSWORD` environment variable.\n",
                "secret": true
            },
            "port": {
                "type": "integer",
                "description": "Port Number to be used to make API calls to HOST\n"
            },
            "teemDisable": {
                "type": "boolean",
                "description": "If this flag set to true,sending telemetry data to TEEM will be disabled,can be provided via `TEEM_DISABLE` environment\nvariable.\n"
            },
            "username": {
                "type": "string",
                "description": "Username for F5os Device,can be provided via `F5OS_USERNAME` environment variable.User provided here need to have\nrequired permission as per\n[UserManagement](https://techdocs.f5.com/en-us/f5os-a-1-4-0/f5-rseries-systems-administration-configuration/title-user-mgmt.html)\n"
            }
        }
    },
    "types": {
        "f5os:index/LoggingCaBundle:LoggingCaBundle": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The PEM-encoded content of the CA bundle.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the CA bundle.\n"
                }
            },
            "type": "object",
            "required": [
                "content",
                "name"
            ]
        },
        "f5os:index/LoggingRemoteForwarding:LoggingRemoteForwarding": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether remote forwarding is enabled.\n"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5os:index/LoggingRemoteForwardingFile:LoggingRemoteForwardingFile"
                    },
                    "description": "List of files for remote forwarding output.\n"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5os:index/LoggingRemoteForwardingLog:LoggingRemoteForwardingLog"
                    },
                    "description": "Log selectors for remote forwarding, specifying facility and severity.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "f5os:index/LoggingRemoteForwardingFile:LoggingRemoteForwardingFile": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the file for log output.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "f5os:index/LoggingRemoteForwardingLog:LoggingRemoteForwardingLog": {
            "properties": {
                "facility": {
                    "type": "string",
                    "description": "The syslog facility for remote forwarding (local0 or authpriv).\n"
                },
                "severity": {
                    "type": "string",
                    "description": "The syslog severity for remote forwarding.\n"
                }
            },
            "type": "object",
            "required": [
                "facility",
                "severity"
            ]
        },
        "f5os:index/LoggingServer:LoggingServer": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The IP address or hostname of the remote logging server.\n"
                },
                "authentication": {
                    "type": "boolean",
                    "description": "Whether authentication is enabled for TCP protocol.\n"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5os:index/LoggingServerLog:LoggingServerLog"
                    },
                    "description": "Log selectors for this server, specifying facility and severity.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port number for the remote logging server (1-65535).\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol used for logging (tcp or udp).\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "port",
                "protocol"
            ]
        },
        "f5os:index/LoggingServerLog:LoggingServerLog": {
            "properties": {
                "facility": {
                    "type": "string",
                    "description": "The syslog facility (e.g., local0, authpriv).\n"
                },
                "severity": {
                    "type": "string",
                    "description": "The syslog severity (e.g., debug, informational, notice, warning, error, critical, alert, emergency).\n"
                }
            },
            "type": "object",
            "required": [
                "facility",
                "severity"
            ]
        },
        "f5os:index/LoggingTls:LoggingTls": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "TLS certificate for secure logging.\n"
                },
                "key": {
                    "type": "string",
                    "description": "TLS private key for secure logging (sensitive).\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "certificate",
                "key"
            ]
        },
        "f5os:index/getDeviceInfoControllerImage:getDeviceInfoControllerImage": {
            "properties": {
                "os": {
                    "type": "string",
                    "description": "OS of the ISO image\n"
                },
                "service": {
                    "type": "string",
                    "description": "Service number of the ISO image\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the ISO image\n"
                }
            },
            "type": "object",
            "required": [
                "os",
                "service",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "f5os:index/getDeviceInfoInterface:getDeviceInfoInterface": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Interface enabled\n"
                },
                "l3Counters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "mtu": {
                    "type": "integer",
                    "description": "Interface mtu\n"
                },
                "name": {
                    "type": "string",
                    "description": "Interface name\n"
                },
                "operationalStatus": {
                    "type": "string",
                    "description": "Interface operational status\n"
                },
                "portSpeed": {
                    "type": "string",
                    "description": "Interface port speed\n"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "l3Counters",
                "mtu",
                "name",
                "operationalStatus",
                "portSpeed",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "f5os:index/getDeviceInfoPartitionImage:getDeviceInfoPartitionImage": {
            "properties": {
                "os": {
                    "type": "string",
                    "description": "OS of the ISO image\n"
                },
                "service": {
                    "type": "string",
                    "description": "Service number of the ISO image\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the ISO image\n"
                }
            },
            "type": "object",
            "required": [
                "os",
                "service",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "f5os:index/getDeviceInfoTenantImage:getDeviceInfoTenantImage": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Image Date\n"
                },
                "imageName": {
                    "type": "string",
                    "description": "Image name\n"
                },
                "inUse": {
                    "type": "boolean",
                    "description": "In use\n"
                },
                "size": {
                    "type": "string",
                    "description": "Image Size\n"
                },
                "status": {
                    "type": "string",
                    "description": "Image Status\n"
                },
                "type": {
                    "type": "string",
                    "description": "Image Type\n"
                }
            },
            "type": "object",
            "required": [
                "date",
                "imageName",
                "inUse",
                "size",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "f5os:index/getDeviceInfoVlan:getDeviceInfoVlan": {
            "properties": {
                "vlanId": {
                    "type": "integer",
                    "description": "Vlan id\n"
                },
                "vlanName": {
                    "type": "string",
                    "description": "Vlan name\n"
                }
            },
            "type": "object",
            "required": [
                "vlanId",
                "vlanName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the f5os package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "disableTlsVerify": {
                "type": "boolean",
                "description": "`disable_tls_verify` controls whether a client verifies the server's certificate chain and host name. default it is set\nto `true`. If `disable_tls_verify` is true, crypto/tls accepts any certificate presented by the server and any host name\nin that certificate. In this mode, TLS is susceptible to machine-in-the-middle attacks unless custom verification is\nused. can be provided by `DISABLE_TLS_VERIFY` environment variable. \u003e **NOTE** If it is set to `false`, certificate/ca\ncertificates should be added to `trusted store` of host where we are running this provider.\n"
            },
            "host": {
                "type": "string",
                "description": "URI/Host details for F5os Device,can be provided via `F5OS_HOST` environment variable.\n"
            },
            "password": {
                "type": "string",
                "description": "Password for F5os Device,can be provided via `F5OS_PASSWORD` environment variable.\n",
                "secret": true
            },
            "port": {
                "type": "integer",
                "description": "Port Number to be used to make API calls to HOST\n"
            },
            "teemDisable": {
                "type": "boolean",
                "description": "If this flag set to true,sending telemetry data to TEEM will be disabled,can be provided via `TEEM_DISABLE` environment\nvariable.\n"
            },
            "username": {
                "type": "string",
                "description": "Username for F5os Device,can be provided via `F5OS_USERNAME` environment variable.User provided here need to have\nrequired permission as per\n[UserManagement](https://techdocs.f5.com/en-us/f5os-a-1-4-0/f5-rseries-systems-administration-configuration/title-user-mgmt.html)\n"
            }
        },
        "inputProperties": {
            "disableTlsVerify": {
                "type": "boolean",
                "description": "`disable_tls_verify` controls whether a client verifies the server's certificate chain and host name. default it is set\nto `true`. If `disable_tls_verify` is true, crypto/tls accepts any certificate presented by the server and any host name\nin that certificate. In this mode, TLS is susceptible to machine-in-the-middle attacks unless custom verification is\nused. can be provided by `DISABLE_TLS_VERIFY` environment variable. \u003e **NOTE** If it is set to `false`, certificate/ca\ncertificates should be added to `trusted store` of host where we are running this provider.\n"
            },
            "host": {
                "type": "string",
                "description": "URI/Host details for F5os Device,can be provided via `F5OS_HOST` environment variable.\n"
            },
            "password": {
                "type": "string",
                "description": "Password for F5os Device,can be provided via `F5OS_PASSWORD` environment variable.\n",
                "secret": true
            },
            "port": {
                "type": "integer",
                "description": "Port Number to be used to make API calls to HOST\n"
            },
            "teemDisable": {
                "type": "boolean",
                "description": "If this flag set to true,sending telemetry data to TEEM will be disabled,can be provided via `TEEM_DISABLE` environment\nvariable.\n"
            },
            "username": {
                "type": "string",
                "description": "Username for F5os Device,can be provided via `F5OS_USERNAME` environment variable.User provided here need to have\nrequired permission as per\n[UserManagement](https://techdocs.f5.com/en-us/f5os-a-1-4-0/f5-rseries-systems-administration-configuration/title-user-mgmt.html)\n"
            }
        },
        "methods": {
            "terraformConfig": "pulumi:providers:f5os/terraformConfig"
        }
    },
    "resources": {
        "f5os:index/configBackup:ConfigBackup": {
            "description": "Resource used to manage F5OS config backup\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5os from \"@pulumi/f5os\";\n\nconst test = new f5os.ConfigBackup(\"test\", {\n    name: \"test_cfg_backup\",\n    remoteHost: \"1.2.3.4\",\n    remoteUser: \"corpuser\",\n    remotePassword: \"password\",\n    remotePath: \"/upload/test_cfg_backup\",\n    protocol: \"https\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5os as f5os\n\ntest = f5os.ConfigBackup(\"test\",\n    name=\"test_cfg_backup\",\n    remote_host=\"1.2.3.4\",\n    remote_user=\"corpuser\",\n    remote_password=\"password\",\n    remote_path=\"/upload/test_cfg_backup\",\n    protocol=\"https\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing F5os = Pulumi.F5os;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new F5os.ConfigBackup(\"test\", new()\n    {\n        Name = \"test_cfg_backup\",\n        RemoteHost = \"1.2.3.4\",\n        RemoteUser = \"corpuser\",\n        RemotePassword = \"password\",\n        RemotePath = \"/upload/test_cfg_backup\",\n        Protocol = \"https\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/BlackDark/pulumi-f5os/sdk/go/f5os\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := f5os.NewConfigBackup(ctx, \"test\", \u0026f5os.ConfigBackupArgs{\n\t\t\tName:           pulumi.String(\"test_cfg_backup\"),\n\t\t\tRemoteHost:     pulumi.String(\"1.2.3.4\"),\n\t\t\tRemoteUser:     pulumi.String(\"corpuser\"),\n\t\t\tRemotePassword: pulumi.String(\"password\"),\n\t\t\tRemotePath:     pulumi.String(\"/upload/test_cfg_backup\"),\n\t\t\tProtocol:       pulumi.String(\"https\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.f5os.ConfigBackup;\nimport com.pulumi.f5os.ConfigBackupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new ConfigBackup(\"test\", ConfigBackupArgs.builder()\n            .name(\"test_cfg_backup\")\n            .remoteHost(\"1.2.3.4\")\n            .remoteUser(\"corpuser\")\n            .remotePassword(\"password\")\n            .remotePath(\"/upload/test_cfg_backup\")\n            .protocol(\"https\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: f5os:ConfigBackup\n    properties:\n      name: test_cfg_backup\n      remoteHost: 1.2.3.4\n      remoteUser: corpuser\n      remotePassword: password\n      remotePath: /upload/test_cfg_backup\n      protocol: https\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the config backup file.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol for config backup file transfer.\n"
                },
                "remoteHost": {
                    "type": "string",
                    "description": "The hostname or IP address of the remote server used for storing the config backup file.\n"
                },
                "remotePassword": {
                    "type": "string",
                    "description": "User password for the remote server used for exporting the created config backup file.\n",
                    "secret": true
                },
                "remotePath": {
                    "type": "string",
                    "description": "The path on the remote server used for uploading the created config backup file.\n"
                },
                "remoteUser": {
                    "type": "string",
                    "description": "User name for the remote server used for exporting the created config backup file.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The number of seconds to wait for config backup file export to finish. The value must be between 150 and 3600\n"
                }
            },
            "required": [
                "name",
                "protocol",
                "remoteHost",
                "remotePassword",
                "remotePath",
                "remoteUser",
                "timeout"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the config backup file.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol for config backup file transfer.\n"
                },
                "remoteHost": {
                    "type": "string",
                    "description": "The hostname or IP address of the remote server used for storing the config backup file.\n"
                },
                "remotePassword": {
                    "type": "string",
                    "description": "User password for the remote server used for exporting the created config backup file.\n",
                    "secret": true
                },
                "remotePath": {
                    "type": "string",
                    "description": "The path on the remote server used for uploading the created config backup file.\n"
                },
                "remoteUser": {
                    "type": "string",
                    "description": "User name for the remote server used for exporting the created config backup file.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The number of seconds to wait for config backup file export to finish. The value must be between 150 and 3600\n"
                }
            },
            "requiredInputs": [
                "protocol",
                "remoteHost",
                "remotePassword",
                "remotePath",
                "remoteUser"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ConfigBackup resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the config backup file.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Protocol for config backup file transfer.\n"
                    },
                    "remoteHost": {
                        "type": "string",
                        "description": "The hostname or IP address of the remote server used for storing the config backup file.\n"
                    },
                    "remotePassword": {
                        "type": "string",
                        "description": "User password for the remote server used for exporting the created config backup file.\n",
                        "secret": true
                    },
                    "remotePath": {
                        "type": "string",
                        "description": "The path on the remote server used for uploading the created config backup file.\n"
                    },
                    "remoteUser": {
                        "type": "string",
                        "description": "User name for the remote server used for exporting the created config backup file.\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The number of seconds to wait for config backup file export to finish. The value must be between 150 and 3600\n"
                    }
                },
                "type": "object"
            }
        },
        "f5os:index/dns:Dns": {
            "description": "Resource used to configure DNS settings (servers and domains) on F5OS systems (VELOS or rSeries).\n\n\u003e **NOTE:** The `f5os.Dns` resource updates DNS servers and search domains on the F5OS platforms using Open API\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5os from \"@pulumi/f5os\";\n\n// Manages DNS servers and search domains on F5OS platforms\nconst test = new f5os.Dns(\"test\", {\n    dnsServers: [\"8.8.8.8\"],\n    dnsDomains: [\"internal.domain\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_f5os as f5os\n\n# Manages DNS servers and search domains on F5OS platforms\ntest = f5os.Dns(\"test\",\n    dns_servers=[\"8.8.8.8\"],\n    dns_domains=[\"internal.domain\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing F5os = Pulumi.F5os;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Manages DNS servers and search domains on F5OS platforms\n    var test = new F5os.Dns(\"test\", new()\n    {\n        DnsServers = new[]\n        {\n            \"8.8.8.8\",\n        },\n        DnsDomains = new[]\n        {\n            \"internal.domain\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/BlackDark/pulumi-f5os/sdk/go/f5os\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Manages DNS servers and search domains on F5OS platforms\n\t\t_, err := f5os.NewDns(ctx, \"test\", \u0026f5os.DnsArgs{\n\t\t\tDnsServers: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"8.8.8.8\"),\n\t\t\t},\n\t\t\tDnsDomains: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"internal.domain\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.f5os.Dns;\nimport com.pulumi.f5os.DnsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Manages DNS servers and search domains on F5OS platforms\n        var test = new Dns(\"test\", DnsArgs.builder()\n            .dnsServers(\"8.8.8.8\")\n            .dnsDomains(\"internal.domain\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Manages DNS servers and search domains on F5OS platforms\n  test:\n    type: f5os:Dns\n    properties:\n      dnsServers:\n        - 8.8.8.8\n      dnsDomains:\n        - internal.domain\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "dnsDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of DNS search domains. Example: `[\"internal.domain\"]`\n"
                },
                "dnsServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of DNS server IP addresses. Example: `[\"8.8.8.8\", \"1.1.1.1\"]`\n"
                }
            },
            "required": [
                "dnsDomains",
                "dnsServers"
            ],
            "inputProperties": {
                "dnsDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of DNS search domains. Example: `[\"internal.domain\"]`\n"
                },
                "dnsServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of DNS server IP addresses. Example: `[\"8.8.8.8\", \"1.1.1.1\"]`\n"
                }
            },
            "requiredInputs": [
                "dnsServers"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Dns resources.\n",
                "properties": {
                    "dnsDomains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of DNS search domains. Example: `[\"internal.domain\"]`\n"
                    },
                    "dnsServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of DNS server IP addresses. Example: `[\"8.8.8.8\", \"1.1.1.1\"]`\n"
                    }
                },
                "type": "object"
            }
        },
        "f5os:index/interface:Interface": {
            "description": "Resource to Manage network interfaces on F5OS systems like VELOS chassis partitions or rSeries platforms\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5os from \"@pulumi/f5os\";\n\nconst testInterface = new f5os.Interface(\"test_interface\", {\n    enabled: true,\n    name: \"1.0\",\n    nativeVlan: 5,\n    trunkVlans: [\n        1,\n        2,\n        3,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_f5os as f5os\n\ntest_interface = f5os.Interface(\"test_interface\",\n    enabled=True,\n    name=\"1.0\",\n    native_vlan=5,\n    trunk_vlans=[\n        1,\n        2,\n        3,\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing F5os = Pulumi.F5os;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testInterface = new F5os.Interface(\"test_interface\", new()\n    {\n        Enabled = true,\n        Name = \"1.0\",\n        NativeVlan = 5,\n        TrunkVlans = new[]\n        {\n            1,\n            2,\n            3,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/BlackDark/pulumi-f5os/sdk/go/f5os\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := f5os.NewInterface(ctx, \"test_interface\", \u0026f5os.InterfaceArgs{\n\t\t\tEnabled:    pulumi.Bool(true),\n\t\t\tName:       pulumi.String(\"1.0\"),\n\t\t\tNativeVlan: pulumi.Int(5),\n\t\t\tTrunkVlans: pulumi.IntArray{\n\t\t\t\tpulumi.Int(1),\n\t\t\t\tpulumi.Int(2),\n\t\t\t\tpulumi.Int(3),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.f5os.Interface;\nimport com.pulumi.f5os.InterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testInterface = new Interface(\"testInterface\", InterfaceArgs.builder()\n            .enabled(true)\n            .name(\"1.0\")\n            .nativeVlan(5)\n            .trunkVlans(            \n                1,\n                2,\n                3)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testInterface:\n    type: f5os:Interface\n    name: test_interface\n    properties:\n      enabled: true\n      name: '1.0'\n      nativeVlan: 5\n      trunkVlans:\n        - 1\n        - 2\n        - 3\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nInterface can be imported by specifying the Interface name\n\n```sh\n$ pulumi import f5os:index/interface:Interface test-import 1.0\n```\n\n",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enables or disables interface.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the interface to configure.\nFor VELOS partitions blade/port format is required e.g. `1/1.0`\n"
                },
                "nativeVlan": {
                    "type": "integer",
                    "description": "Configures the VLAN ID to associate with the interface.\nThe `native_vlan` parameter is used for untagged traffic.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Operational state of the interface.\n"
                },
                "trunkVlans": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Configures multiple VLAN IDs to associate with the interface.\nThe `trunk_vlans` parameter is used for tagged traffic\n"
                }
            },
            "required": [
                "enabled",
                "name",
                "status"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enables or disables interface.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the interface to configure.\nFor VELOS partitions blade/port format is required e.g. `1/1.0`\n"
                },
                "nativeVlan": {
                    "type": "integer",
                    "description": "Configures the VLAN ID to associate with the interface.\nThe `native_vlan` parameter is used for untagged traffic.\n"
                },
                "trunkVlans": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Configures multiple VLAN IDs to associate with the interface.\nThe `trunk_vlans` parameter is used for tagged traffic\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Interface resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Enables or disables interface.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the interface to configure.\nFor VELOS partitions blade/port format is required e.g. `1/1.0`\n"
                    },
                    "nativeVlan": {
                        "type": "integer",
                        "description": "Configures the VLAN ID to associate with the interface.\nThe `native_vlan` parameter is used for untagged traffic.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Operational state of the interface.\n"
                    },
                    "trunkVlans": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Configures multiple VLAN IDs to associate with the interface.\nThe `trunk_vlans` parameter is used for tagged traffic\n"
                    }
                },
                "type": "object"
            }
        },
        "f5os:index/lag:Lag": {
            "description": "Resource to Manage network Link Aggregation Group (LAG) interfaces on F5OS systems like VELOS chassis partitions or rSeries platforms\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5os from \"@pulumi/f5os\";\n\nconst testLag = new f5os.Lag(\"test_lag\", {\n    name: \"test_lag\",\n    members: [\"1.0\"],\n    nativeVlan: 5,\n    trunkVlans: [\n        1,\n        2,\n        3,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_f5os as f5os\n\ntest_lag = f5os.Lag(\"test_lag\",\n    name=\"test_lag\",\n    members=[\"1.0\"],\n    native_vlan=5,\n    trunk_vlans=[\n        1,\n        2,\n        3,\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing F5os = Pulumi.F5os;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testLag = new F5os.Lag(\"test_lag\", new()\n    {\n        Name = \"test_lag\",\n        Members = new[]\n        {\n            \"1.0\",\n        },\n        NativeVlan = 5,\n        TrunkVlans = new[]\n        {\n            1,\n            2,\n            3,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/BlackDark/pulumi-f5os/sdk/go/f5os\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := f5os.NewLag(ctx, \"test_lag\", \u0026f5os.LagArgs{\n\t\t\tName: pulumi.String(\"test_lag\"),\n\t\t\tMembers: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"1.0\"),\n\t\t\t},\n\t\t\tNativeVlan: pulumi.Int(5),\n\t\t\tTrunkVlans: pulumi.IntArray{\n\t\t\t\tpulumi.Int(1),\n\t\t\t\tpulumi.Int(2),\n\t\t\t\tpulumi.Int(3),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.f5os.Lag;\nimport com.pulumi.f5os.LagArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testLag = new Lag(\"testLag\", LagArgs.builder()\n            .name(\"test_lag\")\n            .members(\"1.0\")\n            .nativeVlan(5)\n            .trunkVlans(            \n                1,\n                2,\n                3)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testLag:\n    type: f5os:Lag\n    name: test_lag\n    properties:\n      name: test_lag\n      members:\n        - '1.0'\n      nativeVlan: 5\n      trunkVlans:\n        - 1\n        - 2\n        - 3\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nLAG Interface can be imported by specifying the LAG Interface name\n\n```sh\n$ pulumi import f5os:index/lag:Lag test-import test-lag\n```\n\n",
            "properties": {
                "interval": {
                    "type": "string",
                    "description": "The LACP interval of the interface to be created.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of physical interfaces that are members of the LAG. The members should be present on F5 platform and they shouldn't have any VLANs attached to it\n"
                },
                "mode": {
                    "type": "string",
                    "description": "The LACP mode of the interface to be created.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Link Aggregation Group interface (LAG) interface to configure\n"
                },
                "nativeVlan": {
                    "type": "integer",
                    "description": "Configures the VLAN ID to associate with LAG interface.\nThe `native_vlan` parameter is used for untagged traffic.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Operational state of the LAG interface.\n"
                },
                "trunkVlans": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Configures multiple VLAN IDs to associate with the LAG interface.\nThe `trunk_vlans` parameter is used for tagged traffic\n"
                }
            },
            "required": [
                "interval",
                "members",
                "mode",
                "name",
                "status"
            ],
            "inputProperties": {
                "interval": {
                    "type": "string",
                    "description": "The LACP interval of the interface to be created.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of physical interfaces that are members of the LAG. The members should be present on F5 platform and they shouldn't have any VLANs attached to it\n"
                },
                "mode": {
                    "type": "string",
                    "description": "The LACP mode of the interface to be created.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Link Aggregation Group interface (LAG) interface to configure\n"
                },
                "nativeVlan": {
                    "type": "integer",
                    "description": "Configures the VLAN ID to associate with LAG interface.\nThe `native_vlan` parameter is used for untagged traffic.\n"
                },
                "trunkVlans": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Configures multiple VLAN IDs to associate with the LAG interface.\nThe `trunk_vlans` parameter is used for tagged traffic\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Lag resources.\n",
                "properties": {
                    "interval": {
                        "type": "string",
                        "description": "The LACP interval of the interface to be created.\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of physical interfaces that are members of the LAG. The members should be present on F5 platform and they shouldn't have any VLANs attached to it\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "The LACP mode of the interface to be created.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Link Aggregation Group interface (LAG) interface to configure\n"
                    },
                    "nativeVlan": {
                        "type": "integer",
                        "description": "Configures the VLAN ID to associate with LAG interface.\nThe `native_vlan` parameter is used for untagged traffic.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Operational state of the LAG interface.\n"
                    },
                    "trunkVlans": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Configures multiple VLAN IDs to associate with the LAG interface.\nThe `trunk_vlans` parameter is used for tagged traffic\n"
                    }
                },
                "type": "object"
            }
        },
        "f5os:index/license:License": {
            "description": "Resource to manage license activation and deactivation.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5os from \"@pulumi/f5os\";\n\nconst dummyLicense = new f5os.License(\"dummy_license\", {\n    registrationKey: \"W9XXX-8YYYZ-8KKK7-7PPP2-ZZZZZZ\",\n    addonKeys: [\n        \"NNNWWWW-9PPPPKK\",\n        \"WWWWXXX-4ZZZYYY\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_f5os as f5os\n\ndummy_license = f5os.License(\"dummy_license\",\n    registration_key=\"W9XXX-8YYYZ-8KKK7-7PPP2-ZZZZZZ\",\n    addon_keys=[\n        \"NNNWWWW-9PPPPKK\",\n        \"WWWWXXX-4ZZZYYY\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing F5os = Pulumi.F5os;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var dummyLicense = new F5os.License(\"dummy_license\", new()\n    {\n        RegistrationKey = \"W9XXX-8YYYZ-8KKK7-7PPP2-ZZZZZZ\",\n        AddonKeys = new[]\n        {\n            \"NNNWWWW-9PPPPKK\",\n            \"WWWWXXX-4ZZZYYY\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/BlackDark/pulumi-f5os/sdk/go/f5os\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := f5os.NewLicense(ctx, \"dummy_license\", \u0026f5os.LicenseArgs{\n\t\t\tRegistrationKey: pulumi.String(\"W9XXX-8YYYZ-8KKK7-7PPP2-ZZZZZZ\"),\n\t\t\tAddonKeys: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"NNNWWWW-9PPPPKK\"),\n\t\t\t\tpulumi.String(\"WWWWXXX-4ZZZYYY\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.f5os.License;\nimport com.pulumi.f5os.LicenseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var dummyLicense = new License(\"dummyLicense\", LicenseArgs.builder()\n            .registrationKey(\"W9XXX-8YYYZ-8KKK7-7PPP2-ZZZZZZ\")\n            .addonKeys(            \n                \"NNNWWWW-9PPPPKK\",\n                \"WWWWXXX-4ZZZYYY\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  dummyLicense:\n    type: f5os:License\n    name: dummy_license\n    properties:\n      registrationKey: W9XXX-8YYYZ-8KKK7-7PPP2-ZZZZZZ\n      addonKeys:\n        - NNNWWWW-9PPPPKK\n        - WWWWXXX-4ZZZYYY\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "addonKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The additional registration keys from a license server for the device license activation.\n",
                    "secret": true
                },
                "licenseServer": {
                    "type": "string",
                    "description": "The license server url.\n"
                },
                "registrationKey": {
                    "type": "string",
                    "description": "The Base registration key from a license server for the device license activation.\n",
                    "secret": true
                }
            },
            "required": [
                "registrationKey"
            ],
            "inputProperties": {
                "addonKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The additional registration keys from a license server for the device license activation.\n",
                    "secret": true
                },
                "licenseServer": {
                    "type": "string",
                    "description": "The license server url.\n"
                },
                "registrationKey": {
                    "type": "string",
                    "description": "The Base registration key from a license server for the device license activation.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "registrationKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering License resources.\n",
                "properties": {
                    "addonKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The additional registration keys from a license server for the device license activation.\n",
                        "secret": true
                    },
                    "licenseServer": {
                        "type": "string",
                        "description": "The license server url.\n"
                    },
                    "registrationKey": {
                        "type": "string",
                        "description": "The Base registration key from a license server for the device license activation.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "f5os:index/logging:Logging": {
            "description": "The `f5os.Logging` resource manages logging configuration on F5OS devices, including remote servers, TLS, CA bundles, remote forwarding, and hostname inclusion.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5os from \"@pulumi/f5os\";\n\nconst logging = new f5os.Logging(\"logging\", {\n    includeHostname: false,\n    servers: [\n        {\n            address: \"192.168.100.1\",\n            port: 514,\n            protocol: \"tcp\",\n            authentication: false,\n            logs: [{\n                facility: \"local0\",\n                severity: \"debug\",\n            }],\n        },\n        {\n            address: \"192.168.100.2\",\n            port: 514,\n            protocol: \"tcp\",\n            authentication: false,\n            logs: [{\n                facility: \"authpriv\",\n                severity: \"emergency\",\n            }],\n        },\n    ],\n    remoteForwarding: {\n        enabled: true,\n        logs: [\n            {\n                facility: \"local0\",\n                severity: \"error\",\n            },\n            {\n                facility: \"authpriv\",\n                severity: \"critical\",\n            },\n        ],\n        files: [\n            {\n                name: \"rseries_debug.log\",\n            },\n            {\n                name: \"rseries_audit.log\",\n            },\n        ],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_f5os as f5os\n\nlogging = f5os.Logging(\"logging\",\n    include_hostname=False,\n    servers=[\n        {\n            \"address\": \"192.168.100.1\",\n            \"port\": 514,\n            \"protocol\": \"tcp\",\n            \"authentication\": False,\n            \"logs\": [{\n                \"facility\": \"local0\",\n                \"severity\": \"debug\",\n            }],\n        },\n        {\n            \"address\": \"192.168.100.2\",\n            \"port\": 514,\n            \"protocol\": \"tcp\",\n            \"authentication\": False,\n            \"logs\": [{\n                \"facility\": \"authpriv\",\n                \"severity\": \"emergency\",\n            }],\n        },\n    ],\n    remote_forwarding={\n        \"enabled\": True,\n        \"logs\": [\n            {\n                \"facility\": \"local0\",\n                \"severity\": \"error\",\n            },\n            {\n                \"facility\": \"authpriv\",\n                \"severity\": \"critical\",\n            },\n        ],\n        \"files\": [\n            {\n                \"name\": \"rseries_debug.log\",\n            },\n            {\n                \"name\": \"rseries_audit.log\",\n            },\n        ],\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing F5os = Pulumi.F5os;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var logging = new F5os.Logging(\"logging\", new()\n    {\n        IncludeHostname = false,\n        Servers = new[]\n        {\n            new F5os.Inputs.LoggingServerArgs\n            {\n                Address = \"192.168.100.1\",\n                Port = 514,\n                Protocol = \"tcp\",\n                Authentication = false,\n                Logs = new[]\n                {\n                    new F5os.Inputs.LoggingServerLogArgs\n                    {\n                        Facility = \"local0\",\n                        Severity = \"debug\",\n                    },\n                },\n            },\n            new F5os.Inputs.LoggingServerArgs\n            {\n                Address = \"192.168.100.2\",\n                Port = 514,\n                Protocol = \"tcp\",\n                Authentication = false,\n                Logs = new[]\n                {\n                    new F5os.Inputs.LoggingServerLogArgs\n                    {\n                        Facility = \"authpriv\",\n                        Severity = \"emergency\",\n                    },\n                },\n            },\n        },\n        RemoteForwarding = new F5os.Inputs.LoggingRemoteForwardingArgs\n        {\n            Enabled = true,\n            Logs = new[]\n            {\n                new F5os.Inputs.LoggingRemoteForwardingLogArgs\n                {\n                    Facility = \"local0\",\n                    Severity = \"error\",\n                },\n                new F5os.Inputs.LoggingRemoteForwardingLogArgs\n                {\n                    Facility = \"authpriv\",\n                    Severity = \"critical\",\n                },\n            },\n            Files = new[]\n            {\n                new F5os.Inputs.LoggingRemoteForwardingFileArgs\n                {\n                    Name = \"rseries_debug.log\",\n                },\n                new F5os.Inputs.LoggingRemoteForwardingFileArgs\n                {\n                    Name = \"rseries_audit.log\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/BlackDark/pulumi-f5os/sdk/go/f5os\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := f5os.NewLogging(ctx, \"logging\", \u0026f5os.LoggingArgs{\n\t\t\tIncludeHostname: pulumi.Bool(false),\n\t\t\tServers: f5os.LoggingServerArray{\n\t\t\t\t\u0026f5os.LoggingServerArgs{\n\t\t\t\t\tAddress:        pulumi.String(\"192.168.100.1\"),\n\t\t\t\t\tPort:           pulumi.Int(514),\n\t\t\t\t\tProtocol:       pulumi.String(\"tcp\"),\n\t\t\t\t\tAuthentication: pulumi.Bool(false),\n\t\t\t\t\tLogs: f5os.LoggingServerLogArray{\n\t\t\t\t\t\t\u0026f5os.LoggingServerLogArgs{\n\t\t\t\t\t\t\tFacility: pulumi.String(\"local0\"),\n\t\t\t\t\t\t\tSeverity: pulumi.String(\"debug\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026f5os.LoggingServerArgs{\n\t\t\t\t\tAddress:        pulumi.String(\"192.168.100.2\"),\n\t\t\t\t\tPort:           pulumi.Int(514),\n\t\t\t\t\tProtocol:       pulumi.String(\"tcp\"),\n\t\t\t\t\tAuthentication: pulumi.Bool(false),\n\t\t\t\t\tLogs: f5os.LoggingServerLogArray{\n\t\t\t\t\t\t\u0026f5os.LoggingServerLogArgs{\n\t\t\t\t\t\t\tFacility: pulumi.String(\"authpriv\"),\n\t\t\t\t\t\t\tSeverity: pulumi.String(\"emergency\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tRemoteForwarding: \u0026f5os.LoggingRemoteForwardingArgs{\n\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\tLogs: f5os.LoggingRemoteForwardingLogArray{\n\t\t\t\t\t\u0026f5os.LoggingRemoteForwardingLogArgs{\n\t\t\t\t\t\tFacility: pulumi.String(\"local0\"),\n\t\t\t\t\t\tSeverity: pulumi.String(\"error\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026f5os.LoggingRemoteForwardingLogArgs{\n\t\t\t\t\t\tFacility: pulumi.String(\"authpriv\"),\n\t\t\t\t\t\tSeverity: pulumi.String(\"critical\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tFiles: f5os.LoggingRemoteForwardingFileArray{\n\t\t\t\t\t\u0026f5os.LoggingRemoteForwardingFileArgs{\n\t\t\t\t\t\tName: pulumi.String(\"rseries_debug.log\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026f5os.LoggingRemoteForwardingFileArgs{\n\t\t\t\t\t\tName: pulumi.String(\"rseries_audit.log\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.f5os.Logging;\nimport com.pulumi.f5os.LoggingArgs;\nimport com.pulumi.f5os.inputs.LoggingServerArgs;\nimport com.pulumi.f5os.inputs.LoggingRemoteForwardingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var logging = new Logging(\"logging\", LoggingArgs.builder()\n            .includeHostname(false)\n            .servers(            \n                LoggingServerArgs.builder()\n                    .address(\"192.168.100.1\")\n                    .port(514)\n                    .protocol(\"tcp\")\n                    .authentication(false)\n                    .logs(LoggingServerLogArgs.builder()\n                        .facility(\"local0\")\n                        .severity(\"debug\")\n                        .build())\n                    .build(),\n                LoggingServerArgs.builder()\n                    .address(\"192.168.100.2\")\n                    .port(514)\n                    .protocol(\"tcp\")\n                    .authentication(false)\n                    .logs(LoggingServerLogArgs.builder()\n                        .facility(\"authpriv\")\n                        .severity(\"emergency\")\n                        .build())\n                    .build())\n            .remoteForwarding(LoggingRemoteForwardingArgs.builder()\n                .enabled(true)\n                .logs(                \n                    LoggingRemoteForwardingLogArgs.builder()\n                        .facility(\"local0\")\n                        .severity(\"error\")\n                        .build(),\n                    LoggingRemoteForwardingLogArgs.builder()\n                        .facility(\"authpriv\")\n                        .severity(\"critical\")\n                        .build())\n                .files(                \n                    LoggingRemoteForwardingFileArgs.builder()\n                        .name(\"rseries_debug.log\")\n                        .build(),\n                    LoggingRemoteForwardingFileArgs.builder()\n                        .name(\"rseries_audit.log\")\n                        .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  logging:\n    type: f5os:Logging\n    properties:\n      includeHostname: false\n      servers:\n        - address: 192.168.100.1\n          port: 514\n          protocol: tcp\n          authentication: false\n          logs:\n            - facility: local0\n              severity: debug\n        - address: 192.168.100.2\n          port: 514\n          protocol: tcp\n          authentication: false\n          logs:\n            - facility: authpriv\n              severity: emergency\n      remoteForwarding:\n        enabled: true\n        logs:\n          - facility: local0\n            severity: error\n          - facility: authpriv\n            severity: critical\n        files:\n          - name: rseries_debug.log\n          - name: rseries_audit.log\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "caBundles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5os:index/LoggingCaBundle:LoggingCaBundle"
                    },
                    "description": "List of CA bundles for TLS validation.\n"
                },
                "includeHostname": {
                    "type": "boolean",
                    "description": "Whether to include the hostname in log messages.\n"
                },
                "remoteForwarding": {
                    "$ref": "#/types/f5os:index/LoggingRemoteForwarding:LoggingRemoteForwarding",
                    "description": "Remote forwarding configuration for host logs, including enablement, log selectors, and file outputs.\n"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5os:index/LoggingServer:LoggingServer"
                    },
                    "description": "A list of remote logging servers. Each server can specify address, port, protocol, authentication, and log selectors.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Current state of the logging resource.\n"
                },
                "tls": {
                    "$ref": "#/types/f5os:index/LoggingTls:LoggingTls",
                    "description": "TLS configuration for secure logging.\n"
                }
            },
            "required": [
                "state"
            ],
            "inputProperties": {
                "caBundles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5os:index/LoggingCaBundle:LoggingCaBundle"
                    },
                    "description": "List of CA bundles for TLS validation.\n"
                },
                "includeHostname": {
                    "type": "boolean",
                    "description": "Whether to include the hostname in log messages.\n"
                },
                "remoteForwarding": {
                    "$ref": "#/types/f5os:index/LoggingRemoteForwarding:LoggingRemoteForwarding",
                    "description": "Remote forwarding configuration for host logs, including enablement, log selectors, and file outputs.\n"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5os:index/LoggingServer:LoggingServer"
                    },
                    "description": "A list of remote logging servers. Each server can specify address, port, protocol, authentication, and log selectors.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Current state of the logging resource.\n"
                },
                "tls": {
                    "$ref": "#/types/f5os:index/LoggingTls:LoggingTls",
                    "description": "TLS configuration for secure logging.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Logging resources.\n",
                "properties": {
                    "caBundles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/f5os:index/LoggingCaBundle:LoggingCaBundle"
                        },
                        "description": "List of CA bundles for TLS validation.\n"
                    },
                    "includeHostname": {
                        "type": "boolean",
                        "description": "Whether to include the hostname in log messages.\n"
                    },
                    "remoteForwarding": {
                        "$ref": "#/types/f5os:index/LoggingRemoteForwarding:LoggingRemoteForwarding",
                        "description": "Remote forwarding configuration for host logs, including enablement, log selectors, and file outputs.\n"
                    },
                    "servers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/f5os:index/LoggingServer:LoggingServer"
                        },
                        "description": "A list of remote logging servers. Each server can specify address, port, protocol, authentication, and log selectors.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of the logging resource.\n"
                    },
                    "tls": {
                        "$ref": "#/types/f5os:index/LoggingTls:LoggingTls",
                        "description": "TLS configuration for secure logging.\n"
                    }
                },
                "type": "object"
            }
        },
        "f5os:index/ntpServer:NtpServer": {
            "description": "Manage NTP servers on F5OS based systems (Velos controller or rSeries appliance).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5os from \"@pulumi/f5os\";\n\nconst test = new f5os.NtpServer(\"test\", {\n    server: \"10.20.30.40\",\n    keyId: 123,\n    prefer: true,\n    iburst: true,\n    ntpService: true,\n    ntpAuthentication: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_f5os as f5os\n\ntest = f5os.NtpServer(\"test\",\n    server=\"10.20.30.40\",\n    key_id=123,\n    prefer=True,\n    iburst=True,\n    ntp_service=True,\n    ntp_authentication=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing F5os = Pulumi.F5os;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new F5os.NtpServer(\"test\", new()\n    {\n        Server = \"10.20.30.40\",\n        KeyId = 123,\n        Prefer = true,\n        Iburst = true,\n        NtpService = true,\n        NtpAuthentication = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/BlackDark/pulumi-f5os/sdk/go/f5os\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := f5os.NewNtpServer(ctx, \"test\", \u0026f5os.NtpServerArgs{\n\t\t\tServer:            pulumi.String(\"10.20.30.40\"),\n\t\t\tKeyId:             pulumi.Int(123),\n\t\t\tPrefer:            pulumi.Bool(true),\n\t\t\tIburst:            pulumi.Bool(true),\n\t\t\tNtpService:        pulumi.Bool(true),\n\t\t\tNtpAuthentication: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.f5os.NtpServer;\nimport com.pulumi.f5os.NtpServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new NtpServer(\"test\", NtpServerArgs.builder()\n            .server(\"10.20.30.40\")\n            .keyId(123)\n            .prefer(true)\n            .iburst(true)\n            .ntpService(true)\n            .ntpAuthentication(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: f5os:NtpServer\n    properties:\n      server: 10.20.30.40\n      keyId: 123\n      prefer: true\n      iburst: true\n      ntpService: true\n      ntpAuthentication: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "iburst": {
                    "type": "boolean",
                    "description": "Enable iburst for faster synchronization.\n"
                },
                "keyId": {
                    "type": "integer",
                    "description": "Key ID used for authentication with the NTP server. This should be configured with a key ID that has been already created on the system.\n"
                },
                "ntpAuthentication": {
                    "type": "boolean",
                    "description": "Enable or disable NTP authentication.\n"
                },
                "ntpService": {
                    "type": "boolean",
                    "description": "Enable or disable the NTP service.\n"
                },
                "prefer": {
                    "type": "boolean",
                    "description": "Set to true if this is the preferred server.\n"
                },
                "server": {
                    "type": "string",
                    "description": "IPv4/IPv6 address or FQDN of the NTP server.\n"
                }
            },
            "required": [
                "server"
            ],
            "inputProperties": {
                "iburst": {
                    "type": "boolean",
                    "description": "Enable iburst for faster synchronization.\n"
                },
                "keyId": {
                    "type": "integer",
                    "description": "Key ID used for authentication with the NTP server. This should be configured with a key ID that has been already created on the system.\n"
                },
                "ntpAuthentication": {
                    "type": "boolean",
                    "description": "Enable or disable NTP authentication.\n"
                },
                "ntpService": {
                    "type": "boolean",
                    "description": "Enable or disable the NTP service.\n"
                },
                "prefer": {
                    "type": "boolean",
                    "description": "Set to true if this is the preferred server.\n"
                },
                "server": {
                    "type": "string",
                    "description": "IPv4/IPv6 address or FQDN of the NTP server.\n"
                }
            },
            "requiredInputs": [
                "server"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NtpServer resources.\n",
                "properties": {
                    "iburst": {
                        "type": "boolean",
                        "description": "Enable iburst for faster synchronization.\n"
                    },
                    "keyId": {
                        "type": "integer",
                        "description": "Key ID used for authentication with the NTP server. This should be configured with a key ID that has been already created on the system.\n"
                    },
                    "ntpAuthentication": {
                        "type": "boolean",
                        "description": "Enable or disable NTP authentication.\n"
                    },
                    "ntpService": {
                        "type": "boolean",
                        "description": "Enable or disable the NTP service.\n"
                    },
                    "prefer": {
                        "type": "boolean",
                        "description": "Set to true if this is the preferred server.\n"
                    },
                    "server": {
                        "type": "string",
                        "description": "IPv4/IPv6 address or FQDN of the NTP server.\n"
                    }
                },
                "type": "object"
            }
        },
        "f5os:index/partition:Partition": {
            "description": "Resource used for Manage VELOS chassis partition\n\n\u003e **NOTE** `f5os.Partition` resource is used with Velos Chassis controller only, More info on [chassis partition](https://techdocs.f5.com/en-us/velos-1-5-0/velos-systems-administration-configuration/title-partition-mgmt.html#about-partitions).\nProvider `f5os` credentials will be chassis controller `host`,`username` and `password`\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5os from \"@pulumi/f5os\";\n\n// Manages F5OS partition\nconst velos_part = new f5os.Partition(\"velos-part\", {\n    name: \"TerraformPartition\",\n    osVersion: \"1.3.1-5968\",\n    ipv4MgmtAddress: \"10.144.140.125/24\",\n    ipv4MgmtGateway: \"10.144.140.253\",\n    ipv6MgmtAddress: \"2001::1/64\",\n    ipv6MgmtGateway: \"2001::\",\n    slots: [\n        1,\n        2,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_f5os as f5os\n\n# Manages F5OS partition\nvelos_part = f5os.Partition(\"velos-part\",\n    name=\"TerraformPartition\",\n    os_version=\"1.3.1-5968\",\n    ipv4_mgmt_address=\"10.144.140.125/24\",\n    ipv4_mgmt_gateway=\"10.144.140.253\",\n    ipv6_mgmt_address=\"2001::1/64\",\n    ipv6_mgmt_gateway=\"2001::\",\n    slots=[\n        1,\n        2,\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing F5os = Pulumi.F5os;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Manages F5OS partition\n    var velos_part = new F5os.Partition(\"velos-part\", new()\n    {\n        Name = \"TerraformPartition\",\n        OsVersion = \"1.3.1-5968\",\n        Ipv4MgmtAddress = \"10.144.140.125/24\",\n        Ipv4MgmtGateway = \"10.144.140.253\",\n        Ipv6MgmtAddress = \"2001::1/64\",\n        Ipv6MgmtGateway = \"2001::\",\n        Slots = new[]\n        {\n            1,\n            2,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/BlackDark/pulumi-f5os/sdk/go/f5os\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Manages F5OS partition\n\t\t_, err := f5os.NewPartition(ctx, \"velos-part\", \u0026f5os.PartitionArgs{\n\t\t\tName:            pulumi.String(\"TerraformPartition\"),\n\t\t\tOsVersion:       pulumi.String(\"1.3.1-5968\"),\n\t\t\tIpv4MgmtAddress: pulumi.String(\"10.144.140.125/24\"),\n\t\t\tIpv4MgmtGateway: pulumi.String(\"10.144.140.253\"),\n\t\t\tIpv6MgmtAddress: pulumi.String(\"2001::1/64\"),\n\t\t\tIpv6MgmtGateway: pulumi.String(\"2001::\"),\n\t\t\tSlots: pulumi.IntArray{\n\t\t\t\tpulumi.Int(1),\n\t\t\t\tpulumi.Int(2),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.f5os.Partition;\nimport com.pulumi.f5os.PartitionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Manages F5OS partition\n        var velos_part = new Partition(\"velos-part\", PartitionArgs.builder()\n            .name(\"TerraformPartition\")\n            .osVersion(\"1.3.1-5968\")\n            .ipv4MgmtAddress(\"10.144.140.125/24\")\n            .ipv4MgmtGateway(\"10.144.140.253\")\n            .ipv6MgmtAddress(\"2001::1/64\")\n            .ipv6MgmtGateway(\"2001::\")\n            .slots(            \n                1,\n                2)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Manages F5OS partition\n  velos-part:\n    type: f5os:Partition\n    properties:\n      name: TerraformPartition\n      osVersion: 1.3.1-5968\n      ipv4MgmtAddress: 10.144.140.125/24\n      ipv4MgmtGateway: 10.144.140.253\n      ipv6MgmtAddress: 2001::1/64\n      ipv6MgmtGateway: '2001::'\n      slots:\n        - 1\n        - 2\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "configurationVolumeSize": {
                    "type": "integer",
                    "description": "select the desired configuration volume in increments of 1 GB.\nThe default value is 10 GB, with a minimum of 5 GB and a maximum of 15 GB.After volume sizes are configured, their sizes can be increased but not reduced\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enables or disables partition.\n"
                },
                "imagesVolumeSize": {
                    "type": "integer",
                    "description": "select the desired storage volume for all tenant images in increments of 1 GB.\nThe default value is 15 GB, with a minimum of 5 GB and a maximum of 50 GB.After volume sizes are configured, their sizes can be increased but not reduced\n"
                },
                "ipv4MgmtAddress": {
                    "type": "string",
                    "description": "Specifies the IPv4 address and subnet mask used to access the chassis partition.\nThe address must be specified in CIDR notation e.g. 192.168.1.1/24.\n"
                },
                "ipv4MgmtGateway": {
                    "type": "string",
                    "description": "Specifies the IPv4 chassis partition management gateway.\n"
                },
                "ipv6MgmtAddress": {
                    "type": "string",
                    "description": "Specifies the IPv6 address and subnet mask used to access the chassis partition.\nThe address must be specified in CIDR notation e.g. 2002::1234:abcd:ffff:c0a8:101/64.\nRequired for create operations.\n"
                },
                "ipv6MgmtGateway": {
                    "type": "string",
                    "description": "Specifies the IPv6 chassis partition management gateway.\nRequired for create operations.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the chassis partition.\nPartition names must consist only of alphanumerics (0-9, a-z, A-Z), must begin with a letter, and are limited to 31 characters.\n"
                },
                "osVersion": {
                    "type": "string",
                    "description": "Specifies the partition F5OS-C OS Bundled version.(ISO image version)\n"
                },
                "sharedVolumeSize": {
                    "type": "integer",
                    "description": "select the desired user data (tcpdump captures, QKView data, etc.) volume in increments of 1 GB.\nThe default value is 10 GB, with a minimum of 5 GB and a maximum of 20 GBAfter volume sizes are configured, their sizes can be increased but not reduced\n"
                },
                "slots": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of integers.\nSpecifies which slots with which the chassis partition should associated.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The number of seconds to wait for partition to transition to running state.\n"
                }
            },
            "required": [
                "configurationVolumeSize",
                "enabled",
                "imagesVolumeSize",
                "name",
                "osVersion",
                "sharedVolumeSize",
                "slots",
                "timeout"
            ],
            "inputProperties": {
                "configurationVolumeSize": {
                    "type": "integer",
                    "description": "select the desired configuration volume in increments of 1 GB.\nThe default value is 10 GB, with a minimum of 5 GB and a maximum of 15 GB.After volume sizes are configured, their sizes can be increased but not reduced\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enables or disables partition.\n"
                },
                "imagesVolumeSize": {
                    "type": "integer",
                    "description": "select the desired storage volume for all tenant images in increments of 1 GB.\nThe default value is 15 GB, with a minimum of 5 GB and a maximum of 50 GB.After volume sizes are configured, their sizes can be increased but not reduced\n"
                },
                "ipv4MgmtAddress": {
                    "type": "string",
                    "description": "Specifies the IPv4 address and subnet mask used to access the chassis partition.\nThe address must be specified in CIDR notation e.g. 192.168.1.1/24.\n"
                },
                "ipv4MgmtGateway": {
                    "type": "string",
                    "description": "Specifies the IPv4 chassis partition management gateway.\n"
                },
                "ipv6MgmtAddress": {
                    "type": "string",
                    "description": "Specifies the IPv6 address and subnet mask used to access the chassis partition.\nThe address must be specified in CIDR notation e.g. 2002::1234:abcd:ffff:c0a8:101/64.\nRequired for create operations.\n"
                },
                "ipv6MgmtGateway": {
                    "type": "string",
                    "description": "Specifies the IPv6 chassis partition management gateway.\nRequired for create operations.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the chassis partition.\nPartition names must consist only of alphanumerics (0-9, a-z, A-Z), must begin with a letter, and are limited to 31 characters.\n"
                },
                "osVersion": {
                    "type": "string",
                    "description": "Specifies the partition F5OS-C OS Bundled version.(ISO image version)\n"
                },
                "sharedVolumeSize": {
                    "type": "integer",
                    "description": "select the desired user data (tcpdump captures, QKView data, etc.) volume in increments of 1 GB.\nThe default value is 10 GB, with a minimum of 5 GB and a maximum of 20 GBAfter volume sizes are configured, their sizes can be increased but not reduced\n"
                },
                "slots": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of integers.\nSpecifies which slots with which the chassis partition should associated.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The number of seconds to wait for partition to transition to running state.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Partition resources.\n",
                "properties": {
                    "configurationVolumeSize": {
                        "type": "integer",
                        "description": "select the desired configuration volume in increments of 1 GB.\nThe default value is 10 GB, with a minimum of 5 GB and a maximum of 15 GB.After volume sizes are configured, their sizes can be increased but not reduced\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enables or disables partition.\n"
                    },
                    "imagesVolumeSize": {
                        "type": "integer",
                        "description": "select the desired storage volume for all tenant images in increments of 1 GB.\nThe default value is 15 GB, with a minimum of 5 GB and a maximum of 50 GB.After volume sizes are configured, their sizes can be increased but not reduced\n"
                    },
                    "ipv4MgmtAddress": {
                        "type": "string",
                        "description": "Specifies the IPv4 address and subnet mask used to access the chassis partition.\nThe address must be specified in CIDR notation e.g. 192.168.1.1/24.\n"
                    },
                    "ipv4MgmtGateway": {
                        "type": "string",
                        "description": "Specifies the IPv4 chassis partition management gateway.\n"
                    },
                    "ipv6MgmtAddress": {
                        "type": "string",
                        "description": "Specifies the IPv6 address and subnet mask used to access the chassis partition.\nThe address must be specified in CIDR notation e.g. 2002::1234:abcd:ffff:c0a8:101/64.\nRequired for create operations.\n"
                    },
                    "ipv6MgmtGateway": {
                        "type": "string",
                        "description": "Specifies the IPv6 chassis partition management gateway.\nRequired for create operations.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the chassis partition.\nPartition names must consist only of alphanumerics (0-9, a-z, A-Z), must begin with a letter, and are limited to 31 characters.\n"
                    },
                    "osVersion": {
                        "type": "string",
                        "description": "Specifies the partition F5OS-C OS Bundled version.(ISO image version)\n"
                    },
                    "sharedVolumeSize": {
                        "type": "integer",
                        "description": "select the desired user data (tcpdump captures, QKView data, etc.) volume in increments of 1 GB.\nThe default value is 10 GB, with a minimum of 5 GB and a maximum of 20 GBAfter volume sizes are configured, their sizes can be increased but not reduced\n"
                    },
                    "slots": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of integers.\nSpecifies which slots with which the chassis partition should associated.\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The number of seconds to wait for partition to transition to running state.\n"
                    }
                },
                "type": "object"
            }
        },
        "f5os:index/partitionChangePassword:PartitionChangePassword": {
            "description": "Resource used to manage password of a specific user on a velos chassis partition.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5os from \"@pulumi/f5os\";\n\n// Manages Changing F5os Partition password\nconst changepass = new f5os.PartitionChangePassword(\"changepass\", {\n    userName: \"xxxxx\",\n    oldPassword: \"xxxxxxxx\",\n    newPassword: \"xxxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5os as f5os\n\n# Manages Changing F5os Partition password\nchangepass = f5os.PartitionChangePassword(\"changepass\",\n    user_name=\"xxxxx\",\n    old_password=\"xxxxxxxx\",\n    new_password=\"xxxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing F5os = Pulumi.F5os;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Manages Changing F5os Partition password\n    var changepass = new F5os.PartitionChangePassword(\"changepass\", new()\n    {\n        UserName = \"xxxxx\",\n        OldPassword = \"xxxxxxxx\",\n        NewPassword = \"xxxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/BlackDark/pulumi-f5os/sdk/go/f5os\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Manages Changing F5os Partition password\n\t\t_, err := f5os.NewPartitionChangePassword(ctx, \"changepass\", \u0026f5os.PartitionChangePasswordArgs{\n\t\t\tUserName:    pulumi.String(\"xxxxx\"),\n\t\t\tOldPassword: pulumi.String(\"xxxxxxxx\"),\n\t\t\tNewPassword: pulumi.String(\"xxxxxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.f5os.PartitionChangePassword;\nimport com.pulumi.f5os.PartitionChangePasswordArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Manages Changing F5os Partition password\n        var changepass = new PartitionChangePassword(\"changepass\", PartitionChangePasswordArgs.builder()\n            .userName(\"xxxxx\")\n            .oldPassword(\"xxxxxxxx\")\n            .newPassword(\"xxxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Manages Changing F5os Partition password\n  changepass:\n    type: f5os:PartitionChangePassword\n    properties:\n      userName: xxxxx\n      oldPassword: xxxxxxxx\n      newPassword: xxxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "newPassword": {
                    "type": "string",
                    "description": "New password for the specified user account.\n",
                    "secret": true
                },
                "oldPassword": {
                    "type": "string",
                    "description": "Current password for the specified user account.\n",
                    "secret": true
                },
                "userName": {
                    "type": "string",
                    "description": "Name of the chassis partition user account.\n"
                }
            },
            "required": [
                "newPassword",
                "oldPassword",
                "userName"
            ],
            "inputProperties": {
                "newPassword": {
                    "type": "string",
                    "description": "New password for the specified user account.\n",
                    "secret": true
                },
                "oldPassword": {
                    "type": "string",
                    "description": "Current password for the specified user account.\n",
                    "secret": true
                },
                "userName": {
                    "type": "string",
                    "description": "Name of the chassis partition user account.\n"
                }
            },
            "requiredInputs": [
                "newPassword",
                "oldPassword",
                "userName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PartitionChangePassword resources.\n",
                "properties": {
                    "newPassword": {
                        "type": "string",
                        "description": "New password for the specified user account.\n",
                        "secret": true
                    },
                    "oldPassword": {
                        "type": "string",
                        "description": "Current password for the specified user account.\n",
                        "secret": true
                    },
                    "userName": {
                        "type": "string",
                        "description": "Name of the chassis partition user account.\n"
                    }
                },
                "type": "object"
            }
        },
        "f5os:index/primarykey:Primarykey": {
            "description": "Manage system primary-key using passphrase and salt on F5OS devices.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5os from \"@pulumi/f5os\";\n\n// Manages Primary key settings on F5OS platforms\nconst _default = new f5os.Primarykey(\"default\", {\n    passphrase: \"test-pass\",\n    salt: \"test-salt\",\n    forceUpdate: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_f5os as f5os\n\n# Manages Primary key settings on F5OS platforms\ndefault = f5os.Primarykey(\"default\",\n    passphrase=\"test-pass\",\n    salt=\"test-salt\",\n    force_update=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing F5os = Pulumi.F5os;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Manages Primary key settings on F5OS platforms\n    var @default = new F5os.Primarykey(\"default\", new()\n    {\n        Passphrase = \"test-pass\",\n        Salt = \"test-salt\",\n        ForceUpdate = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/BlackDark/pulumi-f5os/sdk/go/f5os\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Manages Primary key settings on F5OS platforms\n\t\t_, err := f5os.NewPrimarykey(ctx, \"default\", \u0026f5os.PrimarykeyArgs{\n\t\t\tPassphrase:  pulumi.String(\"test-pass\"),\n\t\t\tSalt:        pulumi.String(\"test-salt\"),\n\t\t\tForceUpdate: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.f5os.Primarykey;\nimport com.pulumi.f5os.PrimarykeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Manages Primary key settings on F5OS platforms\n        var default_ = new Primarykey(\"default\", PrimarykeyArgs.builder()\n            .passphrase(\"test-pass\")\n            .salt(\"test-salt\")\n            .forceUpdate(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Manages Primary key settings on F5OS platforms\n  default:\n    type: f5os:Primarykey\n    properties:\n      passphrase: test-pass\n      salt: test-salt\n      forceUpdate: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "forceUpdate": {
                    "type": "boolean",
                    "description": "Force update the primary key on F5OS device.\n"
                },
                "hash": {
                    "type": "string",
                    "description": "Hash of the primary key as returned by the system.\n"
                },
                "passphrase": {
                    "type": "string",
                    "description": "Specifies passphrase for generating primary key.\n",
                    "secret": true
                },
                "salt": {
                    "type": "string",
                    "description": "Specifies salt for generating primary key.\n",
                    "secret": true
                },
                "status": {
                    "type": "string",
                    "description": "Status of primary key operation (e.g., COMPLETE)\n"
                }
            },
            "required": [
                "forceUpdate",
                "hash",
                "passphrase",
                "salt",
                "status"
            ],
            "inputProperties": {
                "forceUpdate": {
                    "type": "boolean",
                    "description": "Force update the primary key on F5OS device.\n"
                },
                "passphrase": {
                    "type": "string",
                    "description": "Specifies passphrase for generating primary key.\n",
                    "secret": true
                },
                "salt": {
                    "type": "string",
                    "description": "Specifies salt for generating primary key.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "passphrase",
                "salt"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Primarykey resources.\n",
                "properties": {
                    "forceUpdate": {
                        "type": "boolean",
                        "description": "Force update the primary key on F5OS device.\n"
                    },
                    "hash": {
                        "type": "string",
                        "description": "Hash of the primary key as returned by the system.\n"
                    },
                    "passphrase": {
                        "type": "string",
                        "description": "Specifies passphrase for generating primary key.\n",
                        "secret": true
                    },
                    "salt": {
                        "type": "string",
                        "description": "Specifies salt for generating primary key.\n",
                        "secret": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of primary key operation (e.g., COMPLETE)\n"
                    }
                },
                "type": "object"
            }
        },
        "f5os:index/system:System": {
            "description": "Resource to manage generic system settings\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5os from \"@pulumi/f5os\";\n\n// Manages System settings on F5OS platforms\nconst systemSettings = new f5os.System(\"system_settings\", {\n    hostname: \"system.example.net\",\n    motd: \"Todays weather is great!\",\n    loginBanner: \"Welcome to the system.\",\n    timezone: \"UTC\",\n    cliTimeout: 3600,\n    tokenLifetime: 15,\n    sshdIdleTimeout: \"1800\",\n    httpdCiphersuite: \"ECDHE-RSA-AES256-GCM-SHA384\",\n    sshdCiphers: [\n        \"aes256-ctr\",\n        \"aes256-gcm@openssh.com\",\n    ],\n    sshdKexAlgs: [\"ecdh-sha2-nistp384\"],\n    sshdMacAlgs: [\"hmac-sha1-96\"],\n    sshdHkeyAlgs: [\"ssh-rsa\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_f5os as f5os\n\n# Manages System settings on F5OS platforms\nsystem_settings = f5os.System(\"system_settings\",\n    hostname=\"system.example.net\",\n    motd=\"Todays weather is great!\",\n    login_banner=\"Welcome to the system.\",\n    timezone=\"UTC\",\n    cli_timeout=3600,\n    token_lifetime=15,\n    sshd_idle_timeout=\"1800\",\n    httpd_ciphersuite=\"ECDHE-RSA-AES256-GCM-SHA384\",\n    sshd_ciphers=[\n        \"aes256-ctr\",\n        \"aes256-gcm@openssh.com\",\n    ],\n    sshd_kex_algs=[\"ecdh-sha2-nistp384\"],\n    sshd_mac_algs=[\"hmac-sha1-96\"],\n    sshd_hkey_algs=[\"ssh-rsa\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing F5os = Pulumi.F5os;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Manages System settings on F5OS platforms\n    var systemSettings = new F5os.System(\"system_settings\", new()\n    {\n        Hostname = \"system.example.net\",\n        Motd = \"Todays weather is great!\",\n        LoginBanner = \"Welcome to the system.\",\n        Timezone = \"UTC\",\n        CliTimeout = 3600,\n        TokenLifetime = 15,\n        SshdIdleTimeout = \"1800\",\n        HttpdCiphersuite = \"ECDHE-RSA-AES256-GCM-SHA384\",\n        SshdCiphers = new[]\n        {\n            \"aes256-ctr\",\n            \"aes256-gcm@openssh.com\",\n        },\n        SshdKexAlgs = new[]\n        {\n            \"ecdh-sha2-nistp384\",\n        },\n        SshdMacAlgs = new[]\n        {\n            \"hmac-sha1-96\",\n        },\n        SshdHkeyAlgs = new[]\n        {\n            \"ssh-rsa\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/BlackDark/pulumi-f5os/sdk/go/f5os\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Manages System settings on F5OS platforms\n\t\t_, err := f5os.NewSystem(ctx, \"system_settings\", \u0026f5os.SystemArgs{\n\t\t\tHostname:         pulumi.String(\"system.example.net\"),\n\t\t\tMotd:             pulumi.String(\"Todays weather is great!\"),\n\t\t\tLoginBanner:      pulumi.String(\"Welcome to the system.\"),\n\t\t\tTimezone:         pulumi.String(\"UTC\"),\n\t\t\tCliTimeout:       pulumi.Int(3600),\n\t\t\tTokenLifetime:    pulumi.Int(15),\n\t\t\tSshdIdleTimeout:  pulumi.String(\"1800\"),\n\t\t\tHttpdCiphersuite: pulumi.String(\"ECDHE-RSA-AES256-GCM-SHA384\"),\n\t\t\tSshdCiphers: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"aes256-ctr\"),\n\t\t\t\tpulumi.String(\"aes256-gcm@openssh.com\"),\n\t\t\t},\n\t\t\tSshdKexAlgs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"ecdh-sha2-nistp384\"),\n\t\t\t},\n\t\t\tSshdMacAlgs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"hmac-sha1-96\"),\n\t\t\t},\n\t\t\tSshdHkeyAlgs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"ssh-rsa\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.f5os.System;\nimport com.pulumi.f5os.SystemArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Manages System settings on F5OS platforms\n        var systemSettings = new System(\"systemSettings\", SystemArgs.builder()\n            .hostname(\"system.example.net\")\n            .motd(\"Todays weather is great!\")\n            .loginBanner(\"Welcome to the system.\")\n            .timezone(\"UTC\")\n            .cliTimeout(3600)\n            .tokenLifetime(15)\n            .sshdIdleTimeout(\"1800\")\n            .httpdCiphersuite(\"ECDHE-RSA-AES256-GCM-SHA384\")\n            .sshdCiphers(            \n                \"aes256-ctr\",\n                \"aes256-gcm@openssh.com\")\n            .sshdKexAlgs(\"ecdh-sha2-nistp384\")\n            .sshdMacAlgs(\"hmac-sha1-96\")\n            .sshdHkeyAlgs(\"ssh-rsa\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Manages System settings on F5OS platforms\n  systemSettings:\n    type: f5os:System\n    name: system_settings\n    properties:\n      hostname: system.example.net\n      motd: Todays weather is great!\n      loginBanner: Welcome to the system.\n      timezone: UTC\n      cliTimeout: 3600\n      tokenLifetime: 15\n      sshdIdleTimeout: 1800\n      httpdCiphersuite: ECDHE-RSA-AES256-GCM-SHA384\n      sshdCiphers:\n        - aes256-ctr\n        - aes256-gcm@openssh.com\n      sshdKexAlgs:\n        - ecdh-sha2-nistp384\n      sshdMacAlgs:\n        - hmac-sha1-96\n      sshdHkeyAlgs:\n        - ssh-rsa\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "cliTimeout": {
                    "type": "integer",
                    "description": "CLI idle timeout\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "System Hostname\n"
                },
                "httpdCiphersuite": {
                    "type": "string",
                    "description": "HTTPS Ciphersuite in OpenSSL format\n"
                },
                "loginBanner": {
                    "type": "string",
                    "description": "Login Banner\n"
                },
                "motd": {
                    "type": "string",
                    "description": "Message of the day\n"
                },
                "sshdCiphers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of httpd ciphersuite in OpenSSL format\n"
                },
                "sshdHkeyAlgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the sshd host key algorithms in OpenSSH format\n"
                },
                "sshdIdleTimeout": {
                    "type": "string",
                    "description": "SSH Idle timeout\n"
                },
                "sshdKexAlgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of sshd key exchange algorithms in OpenSSH format\n"
                },
                "sshdMacAlgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of sshd Mac algorithms in OpenSSH format\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "Timezone for the system per TZ database name\n"
                },
                "tokenLifetime": {
                    "type": "integer",
                    "description": "Token lifetime length in minutes\n"
                }
            },
            "required": [
                "hostname"
            ],
            "inputProperties": {
                "cliTimeout": {
                    "type": "integer",
                    "description": "CLI idle timeout\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "System Hostname\n"
                },
                "httpdCiphersuite": {
                    "type": "string",
                    "description": "HTTPS Ciphersuite in OpenSSL format\n"
                },
                "loginBanner": {
                    "type": "string",
                    "description": "Login Banner\n"
                },
                "motd": {
                    "type": "string",
                    "description": "Message of the day\n"
                },
                "sshdCiphers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of httpd ciphersuite in OpenSSL format\n"
                },
                "sshdHkeyAlgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the sshd host key algorithms in OpenSSH format\n"
                },
                "sshdIdleTimeout": {
                    "type": "string",
                    "description": "SSH Idle timeout\n"
                },
                "sshdKexAlgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of sshd key exchange algorithms in OpenSSH format\n"
                },
                "sshdMacAlgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of sshd Mac algorithms in OpenSSH format\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "Timezone for the system per TZ database name\n"
                },
                "tokenLifetime": {
                    "type": "integer",
                    "description": "Token lifetime length in minutes\n"
                }
            },
            "requiredInputs": [
                "hostname"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering System resources.\n",
                "properties": {
                    "cliTimeout": {
                        "type": "integer",
                        "description": "CLI idle timeout\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "System Hostname\n"
                    },
                    "httpdCiphersuite": {
                        "type": "string",
                        "description": "HTTPS Ciphersuite in OpenSSL format\n"
                    },
                    "loginBanner": {
                        "type": "string",
                        "description": "Login Banner\n"
                    },
                    "motd": {
                        "type": "string",
                        "description": "Message of the day\n"
                    },
                    "sshdCiphers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of httpd ciphersuite in OpenSSL format\n"
                    },
                    "sshdHkeyAlgs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of the sshd host key algorithms in OpenSSH format\n"
                    },
                    "sshdIdleTimeout": {
                        "type": "string",
                        "description": "SSH Idle timeout\n"
                    },
                    "sshdKexAlgs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of sshd key exchange algorithms in OpenSSH format\n"
                    },
                    "sshdMacAlgs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of sshd Mac algorithms in OpenSSH format\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Timezone for the system per TZ database name\n"
                    },
                    "tokenLifetime": {
                        "type": "integer",
                        "description": "Token lifetime length in minutes\n"
                    }
                },
                "type": "object"
            }
        },
        "f5os:index/tenant:Tenant": {
            "description": "Resource used for Manage F5OS tenant on chassis partition/rSeries Appliance\n\n\u003e **NOTE** `f5os.Tenant` resource is used with chassis partition/rSeries appliance, More info on [Tenant](https://techdocs.f5.com/en-us/velos-1-5-0/velos-systems-administration-configuration/title-tenant-management.html#title-tenant-management).\nProvider `f5os` credentials will be chassis partition/rSeries appliance `host`,`username` and `password`\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5os from \"@pulumi/f5os\";\n\n// Manage F5OS Tenant\nconst test3 = new f5os.Tenant(\"test3\", {\n    name: \"testtenant-ecosys3\",\n    imageName: \"BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle\",\n    mgmtIp: \"10.100.100.26\",\n    mgmtGateway: \"10.100.100.1\",\n    mgmtPrefix: 24,\n    type: \"BIG-IP\",\n    cpuCores: 8,\n    nodes: [1],\n    vlans: [\n        1,\n        2,\n    ],\n    runningState: \"deployed\",\n    virtualDiskSize: 82,\n});\n```\n```python\nimport pulumi\nimport pulumi_f5os as f5os\n\n# Manage F5OS Tenant\ntest3 = f5os.Tenant(\"test3\",\n    name=\"testtenant-ecosys3\",\n    image_name=\"BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle\",\n    mgmt_ip=\"10.100.100.26\",\n    mgmt_gateway=\"10.100.100.1\",\n    mgmt_prefix=24,\n    type=\"BIG-IP\",\n    cpu_cores=8,\n    nodes=[1],\n    vlans=[\n        1,\n        2,\n    ],\n    running_state=\"deployed\",\n    virtual_disk_size=82)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing F5os = Pulumi.F5os;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Manage F5OS Tenant\n    var test3 = new F5os.Tenant(\"test3\", new()\n    {\n        Name = \"testtenant-ecosys3\",\n        ImageName = \"BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle\",\n        MgmtIp = \"10.100.100.26\",\n        MgmtGateway = \"10.100.100.1\",\n        MgmtPrefix = 24,\n        Type = \"BIG-IP\",\n        CpuCores = 8,\n        Nodes = new[]\n        {\n            1,\n        },\n        Vlans = new[]\n        {\n            1,\n            2,\n        },\n        RunningState = \"deployed\",\n        VirtualDiskSize = 82,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/BlackDark/pulumi-f5os/sdk/go/f5os\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Manage F5OS Tenant\n\t\t_, err := f5os.NewTenant(ctx, \"test3\", \u0026f5os.TenantArgs{\n\t\t\tName:        pulumi.String(\"testtenant-ecosys3\"),\n\t\t\tImageName:   pulumi.String(\"BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle\"),\n\t\t\tMgmtIp:      pulumi.String(\"10.100.100.26\"),\n\t\t\tMgmtGateway: pulumi.String(\"10.100.100.1\"),\n\t\t\tMgmtPrefix:  pulumi.Int(24),\n\t\t\tType:        pulumi.String(\"BIG-IP\"),\n\t\t\tCpuCores:    pulumi.Int(8),\n\t\t\tNodes: pulumi.IntArray{\n\t\t\t\tpulumi.Int(1),\n\t\t\t},\n\t\t\tVlans: pulumi.IntArray{\n\t\t\t\tpulumi.Int(1),\n\t\t\t\tpulumi.Int(2),\n\t\t\t},\n\t\t\tRunningState:    pulumi.String(\"deployed\"),\n\t\t\tVirtualDiskSize: pulumi.Int(82),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.f5os.Tenant;\nimport com.pulumi.f5os.TenantArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Manage F5OS Tenant\n        var test3 = new Tenant(\"test3\", TenantArgs.builder()\n            .name(\"testtenant-ecosys3\")\n            .imageName(\"BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle\")\n            .mgmtIp(\"10.100.100.26\")\n            .mgmtGateway(\"10.100.100.1\")\n            .mgmtPrefix(24)\n            .type(\"BIG-IP\")\n            .cpuCores(8)\n            .nodes(1)\n            .vlans(            \n                1,\n                2)\n            .runningState(\"deployed\")\n            .virtualDiskSize(82)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Manage F5OS Tenant\n  test3:\n    type: f5os:Tenant\n    properties:\n      name: testtenant-ecosys3\n      imageName: BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle\n      mgmtIp: 10.100.100.26\n      mgmtGateway: 10.100.100.1\n      mgmtPrefix: 24\n      type: BIG-IP\n      cpuCores: 8\n      nodes:\n        - 1\n      vlans:\n        - 1\n        - 2\n      runningState: deployed\n      virtualDiskSize: 82\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nTenant can be imported by specifying the tenant Name identifier.\n\n```sh\n$ pulumi import f5os:index/tenant:Tenant tenant-import testtenant\n```\n\n",
            "properties": {
                "cpuCores": {
                    "type": "integer",
                    "description": "The number of vCPUs that should be added to the tenant.\nRequired for create operations.\n"
                },
                "cryptos": {
                    "type": "string",
                    "description": "Whether crypto and compression hardware offload should be enabled on the tenant.\nWe recommend it is enabled, otherwise crypto and compression may be processed in CPU.\n"
                },
                "dagIpv6PrefixLength": {
                    "type": "integer",
                    "description": "Configuring DAG Global IPv6 Prefix Length,value Range from `1` to `128`.Default is `128`.\n"
                },
                "deploymentFile": {
                    "type": "string",
                    "description": "Deployment file used for BIG-IP-Next .\nRequired for if `type` is `BIG-IP-Next`.\n"
                },
                "imageName": {
                    "type": "string",
                    "description": "Name of the tenant image to be used.\nRequired for create operations\n"
                },
                "macBlockSize": {
                    "type": "string",
                    "description": "Configure a BIG-IP tenant on these systems to use contiguous block of MAC allocation.\nDefault value is `one`.\n"
                },
                "memory": {
                    "type": "integer",
                    "description": "The amount of memory that should be provided to the tenant in MB.\nMore information on memory sizing for [Velos](https://clouddocs.f5.com/training/community/velos-training/html/velos_performance_and_sizing.html#memory-sizing)/[rSeries](https://clouddocs.f5.com/training/community/rseries-training/html/rseries_performance_and_sizing.html#memory-sizing)\n"
                },
                "mgmtGateway": {
                    "type": "string",
                    "description": "Tenant management gateway.\n"
                },
                "mgmtIp": {
                    "type": "string",
                    "description": "IP address used to connect to the deployed tenant.\nRequired for create operations.\n"
                },
                "mgmtPrefix": {
                    "type": "integer",
                    "description": "Tenant management CIDR prefix.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the tenant.\nThe first character must be a letter.\nOnly lowercase alphanumeric characters are allowed.\nNo special or extended characters are allowed except for hyphens.\nThe name cannot exceed 50 characters.\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of integers. Specifies on which blades nodes the tenants are deployed.\nRequired for create operations.\nFor single blade platforms like rSeries only the value of 1 should be provided.\n"
                },
                "runningState": {
                    "type": "string",
                    "description": "Desired running_state of the tenant.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Tenant status\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The number of seconds to wait for image import to finish.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Name of the tenant image to be used.\nRequired for create operations\n"
                },
                "virtualDiskSize": {
                    "type": "integer",
                    "description": "Minimum virtual disk size required for Tenant deployment\n"
                },
                "vlans": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The existing VLAN IDs in the chassis partition that should be added to the tenant.\nThe order of these VLANs is ignored.\nThis module orders the VLANs automatically, if you deliberately re-order them in subsequent tasks, this module will not register a change.\nRequired for create operations\n"
                }
            },
            "required": [
                "cpuCores",
                "cryptos",
                "dagIpv6PrefixLength",
                "imageName",
                "macBlockSize",
                "mgmtGateway",
                "mgmtIp",
                "mgmtPrefix",
                "name",
                "nodes",
                "runningState",
                "status",
                "timeout",
                "type",
                "virtualDiskSize"
            ],
            "inputProperties": {
                "cpuCores": {
                    "type": "integer",
                    "description": "The number of vCPUs that should be added to the tenant.\nRequired for create operations.\n"
                },
                "cryptos": {
                    "type": "string",
                    "description": "Whether crypto and compression hardware offload should be enabled on the tenant.\nWe recommend it is enabled, otherwise crypto and compression may be processed in CPU.\n"
                },
                "dagIpv6PrefixLength": {
                    "type": "integer",
                    "description": "Configuring DAG Global IPv6 Prefix Length,value Range from `1` to `128`.Default is `128`.\n"
                },
                "deploymentFile": {
                    "type": "string",
                    "description": "Deployment file used for BIG-IP-Next .\nRequired for if `type` is `BIG-IP-Next`.\n"
                },
                "imageName": {
                    "type": "string",
                    "description": "Name of the tenant image to be used.\nRequired for create operations\n"
                },
                "macBlockSize": {
                    "type": "string",
                    "description": "Configure a BIG-IP tenant on these systems to use contiguous block of MAC allocation.\nDefault value is `one`.\n"
                },
                "memory": {
                    "type": "integer",
                    "description": "The amount of memory that should be provided to the tenant in MB.\nMore information on memory sizing for [Velos](https://clouddocs.f5.com/training/community/velos-training/html/velos_performance_and_sizing.html#memory-sizing)/[rSeries](https://clouddocs.f5.com/training/community/rseries-training/html/rseries_performance_and_sizing.html#memory-sizing)\n"
                },
                "mgmtGateway": {
                    "type": "string",
                    "description": "Tenant management gateway.\n"
                },
                "mgmtIp": {
                    "type": "string",
                    "description": "IP address used to connect to the deployed tenant.\nRequired for create operations.\n"
                },
                "mgmtPrefix": {
                    "type": "integer",
                    "description": "Tenant management CIDR prefix.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the tenant.\nThe first character must be a letter.\nOnly lowercase alphanumeric characters are allowed.\nNo special or extended characters are allowed except for hyphens.\nThe name cannot exceed 50 characters.\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of integers. Specifies on which blades nodes the tenants are deployed.\nRequired for create operations.\nFor single blade platforms like rSeries only the value of 1 should be provided.\n"
                },
                "runningState": {
                    "type": "string",
                    "description": "Desired running_state of the tenant.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The number of seconds to wait for image import to finish.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Name of the tenant image to be used.\nRequired for create operations\n"
                },
                "virtualDiskSize": {
                    "type": "integer",
                    "description": "Minimum virtual disk size required for Tenant deployment\n"
                },
                "vlans": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The existing VLAN IDs in the chassis partition that should be added to the tenant.\nThe order of these VLANs is ignored.\nThis module orders the VLANs automatically, if you deliberately re-order them in subsequent tasks, this module will not register a change.\nRequired for create operations\n"
                }
            },
            "requiredInputs": [
                "cpuCores",
                "imageName",
                "mgmtGateway",
                "mgmtIp",
                "mgmtPrefix",
                "virtualDiskSize"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Tenant resources.\n",
                "properties": {
                    "cpuCores": {
                        "type": "integer",
                        "description": "The number of vCPUs that should be added to the tenant.\nRequired for create operations.\n"
                    },
                    "cryptos": {
                        "type": "string",
                        "description": "Whether crypto and compression hardware offload should be enabled on the tenant.\nWe recommend it is enabled, otherwise crypto and compression may be processed in CPU.\n"
                    },
                    "dagIpv6PrefixLength": {
                        "type": "integer",
                        "description": "Configuring DAG Global IPv6 Prefix Length,value Range from `1` to `128`.Default is `128`.\n"
                    },
                    "deploymentFile": {
                        "type": "string",
                        "description": "Deployment file used for BIG-IP-Next .\nRequired for if `type` is `BIG-IP-Next`.\n"
                    },
                    "imageName": {
                        "type": "string",
                        "description": "Name of the tenant image to be used.\nRequired for create operations\n"
                    },
                    "macBlockSize": {
                        "type": "string",
                        "description": "Configure a BIG-IP tenant on these systems to use contiguous block of MAC allocation.\nDefault value is `one`.\n"
                    },
                    "memory": {
                        "type": "integer",
                        "description": "The amount of memory that should be provided to the tenant in MB.\nMore information on memory sizing for [Velos](https://clouddocs.f5.com/training/community/velos-training/html/velos_performance_and_sizing.html#memory-sizing)/[rSeries](https://clouddocs.f5.com/training/community/rseries-training/html/rseries_performance_and_sizing.html#memory-sizing)\n"
                    },
                    "mgmtGateway": {
                        "type": "string",
                        "description": "Tenant management gateway.\n"
                    },
                    "mgmtIp": {
                        "type": "string",
                        "description": "IP address used to connect to the deployed tenant.\nRequired for create operations.\n"
                    },
                    "mgmtPrefix": {
                        "type": "integer",
                        "description": "Tenant management CIDR prefix.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the tenant.\nThe first character must be a letter.\nOnly lowercase alphanumeric characters are allowed.\nNo special or extended characters are allowed except for hyphens.\nThe name cannot exceed 50 characters.\n"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of integers. Specifies on which blades nodes the tenants are deployed.\nRequired for create operations.\nFor single blade platforms like rSeries only the value of 1 should be provided.\n"
                    },
                    "runningState": {
                        "type": "string",
                        "description": "Desired running_state of the tenant.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Tenant status\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The number of seconds to wait for image import to finish.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Name of the tenant image to be used.\nRequired for create operations\n"
                    },
                    "virtualDiskSize": {
                        "type": "integer",
                        "description": "Minimum virtual disk size required for Tenant deployment\n"
                    },
                    "vlans": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The existing VLAN IDs in the chassis partition that should be added to the tenant.\nThe order of these VLANs is ignored.\nThis module orders the VLANs automatically, if you deliberately re-order them in subsequent tasks, this module will not register a change.\nRequired for create operations\n"
                    }
                },
                "type": "object"
            }
        },
        "f5os:index/tenantImage:TenantImage": {
            "description": "Resource used for Manage F5OS tenant images\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5os from \"@pulumi/f5os\";\n\n// Resource for tenant image copy\nconst test = new f5os.TenantImage(\"test\", {\n    imageName: \"BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle\",\n    remoteHost: \"xxxxx\",\n    remotePath: \"v17.1.0/daily/current/VM\",\n    localPath: \"images\",\n    timeout: 360,\n});\n```\n```python\nimport pulumi\nimport pulumi_f5os as f5os\n\n# Resource for tenant image copy\ntest = f5os.TenantImage(\"test\",\n    image_name=\"BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle\",\n    remote_host=\"xxxxx\",\n    remote_path=\"v17.1.0/daily/current/VM\",\n    local_path=\"images\",\n    timeout=360)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing F5os = Pulumi.F5os;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Resource for tenant image copy\n    var test = new F5os.TenantImage(\"test\", new()\n    {\n        ImageName = \"BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle\",\n        RemoteHost = \"xxxxx\",\n        RemotePath = \"v17.1.0/daily/current/VM\",\n        LocalPath = \"images\",\n        Timeout = 360,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/BlackDark/pulumi-f5os/sdk/go/f5os\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Resource for tenant image copy\n\t\t_, err := f5os.NewTenantImage(ctx, \"test\", \u0026f5os.TenantImageArgs{\n\t\t\tImageName:  pulumi.String(\"BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle\"),\n\t\t\tRemoteHost: pulumi.String(\"xxxxx\"),\n\t\t\tRemotePath: pulumi.String(\"v17.1.0/daily/current/VM\"),\n\t\t\tLocalPath:  pulumi.String(\"images\"),\n\t\t\tTimeout:    pulumi.Int(360),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.f5os.TenantImage;\nimport com.pulumi.f5os.TenantImageArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Resource for tenant image copy\n        var test = new TenantImage(\"test\", TenantImageArgs.builder()\n            .imageName(\"BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle\")\n            .remoteHost(\"xxxxx\")\n            .remotePath(\"v17.1.0/daily/current/VM\")\n            .localPath(\"images\")\n            .timeout(360)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Resource for tenant image copy\n  test:\n    type: f5os:TenantImage\n    properties:\n      imageName: BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle\n      remoteHost: xxxxx\n      remotePath: v17.1.0/daily/current/VM\n      localPath: images\n      timeout: 360\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "imageName": {
                    "type": "string",
                    "description": "Name of the tenant image.\n"
                },
                "localPath": {
                    "type": "string",
                    "description": "The path on the F5OS where the the tenant image is to be imported to.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol for image transfer.\n"
                },
                "remoteHost": {
                    "type": "string",
                    "description": "The hostname or IP address of the remote server on which the tenant image is stored.\nThe server must make the image accessible via the specified protocol.\n"
                },
                "remotePassword": {
                    "type": "string",
                    "description": "Password for the user on the remote server on which the tenant image is stored.\n",
                    "secret": true
                },
                "remotePath": {
                    "type": "string",
                    "description": "The path to the tenant image on the remote server.\n"
                },
                "remotePort": {
                    "type": "integer",
                    "description": "The port on the remote host to which you want to connect.\nIf the port is not provided, a default port for the selected protocol is used.\n"
                },
                "remoteUser": {
                    "type": "string",
                    "description": "User name for the remote server on which the tenant image is stored.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of Imported Image\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The number of seconds to wait for image import to finish.\n"
                },
                "uploadFromPath": {
                    "type": "string",
                    "description": "The path to image on the local machine which is to be uploaded\n"
                }
            },
            "required": [
                "imageName",
                "status",
                "timeout"
            ],
            "inputProperties": {
                "imageName": {
                    "type": "string",
                    "description": "Name of the tenant image.\n"
                },
                "localPath": {
                    "type": "string",
                    "description": "The path on the F5OS where the the tenant image is to be imported to.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol for image transfer.\n"
                },
                "remoteHost": {
                    "type": "string",
                    "description": "The hostname or IP address of the remote server on which the tenant image is stored.\nThe server must make the image accessible via the specified protocol.\n"
                },
                "remotePassword": {
                    "type": "string",
                    "description": "Password for the user on the remote server on which the tenant image is stored.\n",
                    "secret": true
                },
                "remotePath": {
                    "type": "string",
                    "description": "The path to the tenant image on the remote server.\n"
                },
                "remotePort": {
                    "type": "integer",
                    "description": "The port on the remote host to which you want to connect.\nIf the port is not provided, a default port for the selected protocol is used.\n"
                },
                "remoteUser": {
                    "type": "string",
                    "description": "User name for the remote server on which the tenant image is stored.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The number of seconds to wait for image import to finish.\n"
                },
                "uploadFromPath": {
                    "type": "string",
                    "description": "The path to image on the local machine which is to be uploaded\n"
                }
            },
            "requiredInputs": [
                "imageName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TenantImage resources.\n",
                "properties": {
                    "imageName": {
                        "type": "string",
                        "description": "Name of the tenant image.\n"
                    },
                    "localPath": {
                        "type": "string",
                        "description": "The path on the F5OS where the the tenant image is to be imported to.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Protocol for image transfer.\n"
                    },
                    "remoteHost": {
                        "type": "string",
                        "description": "The hostname or IP address of the remote server on which the tenant image is stored.\nThe server must make the image accessible via the specified protocol.\n"
                    },
                    "remotePassword": {
                        "type": "string",
                        "description": "Password for the user on the remote server on which the tenant image is stored.\n",
                        "secret": true
                    },
                    "remotePath": {
                        "type": "string",
                        "description": "The path to the tenant image on the remote server.\n"
                    },
                    "remotePort": {
                        "type": "integer",
                        "description": "The port on the remote host to which you want to connect.\nIf the port is not provided, a default port for the selected protocol is used.\n"
                    },
                    "remoteUser": {
                        "type": "string",
                        "description": "User name for the remote server on which the tenant image is stored.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of Imported Image\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The number of seconds to wait for image import to finish.\n"
                    },
                    "uploadFromPath": {
                        "type": "string",
                        "description": "The path to image on the local machine which is to be uploaded\n"
                    }
                },
                "type": "object"
            }
        },
        "f5os:index/tlsCertKey:TlsCertKey": {
            "description": "Resource used to manage tls cert and key on F5OS partitions\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5os from \"@pulumi/f5os\";\n\nconst testcert = new f5os.TlsCertKey(\"testcert\", {\n    name: \"testcert\",\n    daysValid: 40,\n    email: \"user@org.com\",\n    city: \"Hyd\",\n    province: \"Telangana\",\n    country: \"IN\",\n    organization: \"F7\",\n    unit: \"IT\",\n    keyType: \"encrypted-rsa\",\n    keySize: 2048,\n    keyPassphrase: \"test123\",\n    confirmKeyPassphrase: \"test123\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5os as f5os\n\ntestcert = f5os.TlsCertKey(\"testcert\",\n    name=\"testcert\",\n    days_valid=40,\n    email=\"user@org.com\",\n    city=\"Hyd\",\n    province=\"Telangana\",\n    country=\"IN\",\n    organization=\"F7\",\n    unit=\"IT\",\n    key_type=\"encrypted-rsa\",\n    key_size=2048,\n    key_passphrase=\"test123\",\n    confirm_key_passphrase=\"test123\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing F5os = Pulumi.F5os;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testcert = new F5os.TlsCertKey(\"testcert\", new()\n    {\n        Name = \"testcert\",\n        DaysValid = 40,\n        Email = \"user@org.com\",\n        City = \"Hyd\",\n        Province = \"Telangana\",\n        Country = \"IN\",\n        Organization = \"F7\",\n        Unit = \"IT\",\n        KeyType = \"encrypted-rsa\",\n        KeySize = 2048,\n        KeyPassphrase = \"test123\",\n        ConfirmKeyPassphrase = \"test123\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/BlackDark/pulumi-f5os/sdk/go/f5os\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := f5os.NewTlsCertKey(ctx, \"testcert\", \u0026f5os.TlsCertKeyArgs{\n\t\t\tName:                 pulumi.String(\"testcert\"),\n\t\t\tDaysValid:            pulumi.Int(40),\n\t\t\tEmail:                pulumi.String(\"user@org.com\"),\n\t\t\tCity:                 pulumi.String(\"Hyd\"),\n\t\t\tProvince:             pulumi.String(\"Telangana\"),\n\t\t\tCountry:              pulumi.String(\"IN\"),\n\t\t\tOrganization:         pulumi.String(\"F7\"),\n\t\t\tUnit:                 pulumi.String(\"IT\"),\n\t\t\tKeyType:              pulumi.String(\"encrypted-rsa\"),\n\t\t\tKeySize:              pulumi.Int(2048),\n\t\t\tKeyPassphrase:        pulumi.String(\"test123\"),\n\t\t\tConfirmKeyPassphrase: pulumi.String(\"test123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.f5os.TlsCertKey;\nimport com.pulumi.f5os.TlsCertKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testcert = new TlsCertKey(\"testcert\", TlsCertKeyArgs.builder()\n            .name(\"testcert\")\n            .daysValid(40)\n            .email(\"user@org.com\")\n            .city(\"Hyd\")\n            .province(\"Telangana\")\n            .country(\"IN\")\n            .organization(\"F7\")\n            .unit(\"IT\")\n            .keyType(\"encrypted-rsa\")\n            .keySize(2048)\n            .keyPassphrase(\"test123\")\n            .confirmKeyPassphrase(\"test123\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testcert:\n    type: f5os:TlsCertKey\n    properties:\n      name: testcert\n      daysValid: 40\n      email: user@org.com\n      city: Hyd\n      province: Telangana\n      country: IN\n      organization: F7\n      unit: IT\n      keyType: encrypted-rsa\n      keySize: 2048\n      keyPassphrase: test123\n      confirmKeyPassphrase: test123\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "city": {
                    "type": "string",
                    "description": "The residing cty of the certificate holder.\n"
                },
                "confirmKeyPassphrase": {
                    "type": "string",
                    "description": "This specifies the confirmation of the passphrase for the key, the value should be the same as the `key_passphrase`. This attribute is required when `key_type` is set to `encrypted-rsa` or `encrypted-ecdsa`\n",
                    "secret": true
                },
                "country": {
                    "type": "string",
                    "description": "The residing country of the certificate holder.\n"
                },
                "daysValid": {
                    "type": "integer",
                    "description": "The number of days for which the certificate is valid, the default value is 30 days\n"
                },
                "email": {
                    "type": "string",
                    "description": "The email address of the certificate holder.\n"
                },
                "keyCurve": {
                    "type": "string",
                    "description": "This specifies the specific elliptic curve used in ECC, this is only applicable for ECDSA keys. This attribute is required when `key_type` is set to `ecdsa` or `encrypted-ecdsa`\n"
                },
                "keyPassphrase": {
                    "type": "string",
                    "description": "This specifies the passphrase for the key. This attribute is required when `key_type` is set to `encrypted-rsa` or `encrypted-ecdsa`\n",
                    "secret": true
                },
                "keySize": {
                    "type": "integer",
                    "description": "This specifies the length of the key, this is only applicable for RSA keys. This attribute is required when `key_type` is set to `rsa` or `encrypted-rsa`\n"
                },
                "keyType": {
                    "type": "string",
                    "description": "The type of the tls key\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the tls certificate.\n"
                },
                "organization": {
                    "type": "string",
                    "description": "The organization of the certificate holder\n"
                },
                "province": {
                    "type": "string",
                    "description": "The residing province of the certificate holder.\n"
                },
                "subjectAlternativeName": {
                    "type": "string",
                    "description": "The subject alternative name of the tls certificate. This attribute is required for F5OS v1.8 and above and not supported for F5OS below v1.8\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The organizational unit of the certificate holder.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version of the certificate\n"
                }
            },
            "required": [
                "daysValid",
                "name",
                "version"
            ],
            "inputProperties": {
                "city": {
                    "type": "string",
                    "description": "The residing cty of the certificate holder.\n"
                },
                "confirmKeyPassphrase": {
                    "type": "string",
                    "description": "This specifies the confirmation of the passphrase for the key, the value should be the same as the `key_passphrase`. This attribute is required when `key_type` is set to `encrypted-rsa` or `encrypted-ecdsa`\n",
                    "secret": true
                },
                "country": {
                    "type": "string",
                    "description": "The residing country of the certificate holder.\n"
                },
                "daysValid": {
                    "type": "integer",
                    "description": "The number of days for which the certificate is valid, the default value is 30 days\n"
                },
                "email": {
                    "type": "string",
                    "description": "The email address of the certificate holder.\n"
                },
                "keyCurve": {
                    "type": "string",
                    "description": "This specifies the specific elliptic curve used in ECC, this is only applicable for ECDSA keys. This attribute is required when `key_type` is set to `ecdsa` or `encrypted-ecdsa`\n"
                },
                "keyPassphrase": {
                    "type": "string",
                    "description": "This specifies the passphrase for the key. This attribute is required when `key_type` is set to `encrypted-rsa` or `encrypted-ecdsa`\n",
                    "secret": true
                },
                "keySize": {
                    "type": "integer",
                    "description": "This specifies the length of the key, this is only applicable for RSA keys. This attribute is required when `key_type` is set to `rsa` or `encrypted-rsa`\n"
                },
                "keyType": {
                    "type": "string",
                    "description": "The type of the tls key\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the tls certificate.\n"
                },
                "organization": {
                    "type": "string",
                    "description": "The organization of the certificate holder\n"
                },
                "province": {
                    "type": "string",
                    "description": "The residing province of the certificate holder.\n"
                },
                "subjectAlternativeName": {
                    "type": "string",
                    "description": "The subject alternative name of the tls certificate. This attribute is required for F5OS v1.8 and above and not supported for F5OS below v1.8\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The organizational unit of the certificate holder.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version of the certificate\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TlsCertKey resources.\n",
                "properties": {
                    "city": {
                        "type": "string",
                        "description": "The residing cty of the certificate holder.\n"
                    },
                    "confirmKeyPassphrase": {
                        "type": "string",
                        "description": "This specifies the confirmation of the passphrase for the key, the value should be the same as the `key_passphrase`. This attribute is required when `key_type` is set to `encrypted-rsa` or `encrypted-ecdsa`\n",
                        "secret": true
                    },
                    "country": {
                        "type": "string",
                        "description": "The residing country of the certificate holder.\n"
                    },
                    "daysValid": {
                        "type": "integer",
                        "description": "The number of days for which the certificate is valid, the default value is 30 days\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "The email address of the certificate holder.\n"
                    },
                    "keyCurve": {
                        "type": "string",
                        "description": "This specifies the specific elliptic curve used in ECC, this is only applicable for ECDSA keys. This attribute is required when `key_type` is set to `ecdsa` or `encrypted-ecdsa`\n"
                    },
                    "keyPassphrase": {
                        "type": "string",
                        "description": "This specifies the passphrase for the key. This attribute is required when `key_type` is set to `encrypted-rsa` or `encrypted-ecdsa`\n",
                        "secret": true
                    },
                    "keySize": {
                        "type": "integer",
                        "description": "This specifies the length of the key, this is only applicable for RSA keys. This attribute is required when `key_type` is set to `rsa` or `encrypted-rsa`\n"
                    },
                    "keyType": {
                        "type": "string",
                        "description": "The type of the tls key\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the tls certificate.\n"
                    },
                    "organization": {
                        "type": "string",
                        "description": "The organization of the certificate holder\n"
                    },
                    "province": {
                        "type": "string",
                        "description": "The residing province of the certificate holder.\n"
                    },
                    "subjectAlternativeName": {
                        "type": "string",
                        "description": "The subject alternative name of the tls certificate. This attribute is required for F5OS v1.8 and above and not supported for F5OS below v1.8\n"
                    },
                    "unit": {
                        "type": "string",
                        "description": "The organizational unit of the certificate holder.\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version of the certificate\n"
                    }
                },
                "type": "object"
            }
        },
        "f5os:index/vlan:Vlan": {
            "description": "Resource to Manage VLANs on F5OS based systems like chassis partitions or rSeries platforms\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5os from \"@pulumi/f5os\";\n\n// Manages Vlans on F5OS platforms\nconst vlan_id = new f5os.Vlan(\"vlan-id\", {\n    vlanId: 4,\n    name: \"vlan4\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5os as f5os\n\n# Manages Vlans on F5OS platforms\nvlan_id = f5os.Vlan(\"vlan-id\",\n    vlan_id=4,\n    name=\"vlan4\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing F5os = Pulumi.F5os;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Manages Vlans on F5OS platforms\n    var vlan_id = new F5os.Vlan(\"vlan-id\", new()\n    {\n        VlanId = 4,\n        Name = \"vlan4\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/BlackDark/pulumi-f5os/sdk/go/f5os\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Manages Vlans on F5OS platforms\n\t\t_, err := f5os.NewVlan(ctx, \"vlan-id\", \u0026f5os.VlanArgs{\n\t\t\tVlanId: pulumi.Int(4),\n\t\t\tName:   pulumi.String(\"vlan4\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.f5os.Vlan;\nimport com.pulumi.f5os.VlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Manages Vlans on F5OS platforms\n        var vlan_id = new Vlan(\"vlan-id\", VlanArgs.builder()\n            .vlanId(4)\n            .name(\"vlan4\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Manages Vlans on F5OS platforms\n  vlan-id:\n    type: f5os:Vlan\n    properties:\n      vlanId: 4\n      name: vlan4\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nVlan can be imported by specifying the numeric vlan identifier.\n\n```sh\n$ pulumi import f5os:index/vlan:Vlan vlan-id-import 4\n```\n\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the VLAN to configure on the F5OS platform.\nThis parameter is required when creating a resource.\nThe first character must be a letter, alphanumeric characters are allowed.\nPeriods, commas, hyphens, and underscores are allowed.\nThe name cannot exceed 58 characters.\n"
                },
                "vlanId": {
                    "type": "integer",
                    "description": "The ID for the VLAN.\nValid value range is from `0` to `4095`.\n"
                }
            },
            "required": [
                "name",
                "vlanId"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the VLAN to configure on the F5OS platform.\nThis parameter is required when creating a resource.\nThe first character must be a letter, alphanumeric characters are allowed.\nPeriods, commas, hyphens, and underscores are allowed.\nThe name cannot exceed 58 characters.\n"
                },
                "vlanId": {
                    "type": "integer",
                    "description": "The ID for the VLAN.\nValid value range is from `0` to `4095`.\n"
                }
            },
            "requiredInputs": [
                "vlanId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vlan resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the VLAN to configure on the F5OS platform.\nThis parameter is required when creating a resource.\nThe first character must be a letter, alphanumeric characters are allowed.\nPeriods, commas, hyphens, and underscores are allowed.\nThe name cannot exceed 58 characters.\n"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "The ID for the VLAN.\nValid value range is from `0` to `4095`.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "f5os:index/getDeviceInfo:getDeviceInfo": {
            "description": "Get Information about the various components of F5OS device. Currently the various components whose information is fetched are `interfaces`, `vlans`, `tenant images`, `controller images` and `partition images`. Information about partition and controller images can only be fetched from the Velos controller so please set you provider block to point to a Velos controller when you want information for partition and controller images\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDeviceInfo.\n",
                "properties": {
                    "gatherInfoOfs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of components for which to gather information. This attribute accept the following values:\n[`all`,`interfaces`,`vlans`,`tenant_images`,`partition_images`,`controller_images`,`!all`,`!interfaces`,`!vlans`,`!tenant_images`,`!partition_images`,`!controller_images`]\n"
                    }
                },
                "type": "object",
                "required": [
                    "gatherInfoOfs"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDeviceInfo.\n",
                "properties": {
                    "controllerImages": {
                        "description": "Information about existing controller images\n",
                        "items": {
                            "$ref": "#/types/f5os:index/getDeviceInfoControllerImage:getDeviceInfoControllerImage"
                        },
                        "type": "array"
                    },
                    "gatherInfoOfs": {
                        "description": "List of components for which to gather information. This attribute accept the following values:\n[`all`,`interfaces`,`vlans`,`tenant_images`,`partition_images`,`controller_images`,`!all`,`!interfaces`,`!vlans`,`!tenant_images`,`!partition_images`,`!controller_images`]\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "Identifier for Device Info\n",
                        "type": "string"
                    },
                    "interfaces": {
                        "description": "Information about existing interfaces\n",
                        "items": {
                            "$ref": "#/types/f5os:index/getDeviceInfoInterface:getDeviceInfoInterface"
                        },
                        "type": "array"
                    },
                    "partitionImages": {
                        "description": "Device info\n",
                        "items": {
                            "$ref": "#/types/f5os:index/getDeviceInfoPartitionImage:getDeviceInfoPartitionImage"
                        },
                        "type": "array"
                    },
                    "tenantImages": {
                        "description": "Information about existing tenant images\n",
                        "items": {
                            "$ref": "#/types/f5os:index/getDeviceInfoTenantImage:getDeviceInfoTenantImage"
                        },
                        "type": "array"
                    },
                    "vlans": {
                        "description": "Information about existing vlans\n",
                        "items": {
                            "$ref": "#/types/f5os:index/getDeviceInfoVlan:getDeviceInfoVlan"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "controllerImages",
                    "gatherInfoOfs",
                    "id",
                    "interfaces",
                    "partitionImages",
                    "tenantImages",
                    "vlans"
                ],
                "type": "object"
            }
        },
        "f5os:index/getTenantImage:getTenantImage": {
            "description": "Get information about the tenant Image on f5os platform.\n\nUse this data source to get information, whether image available on platform or not\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5os from \"@pulumi/f5os\";\n\nconst test = f5os.getTenantImage({\n    imageName: \"BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5os as f5os\n\ntest = f5os.get_tenant_image(image_name=\"BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing F5os = Pulumi.F5os;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = F5os.GetTenantImage.Invoke(new()\n    {\n        ImageName = \"BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/BlackDark/pulumi-f5os/sdk/go/f5os\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := f5os.LookupTenantImage(ctx, \u0026f5os.LookupTenantImageArgs{\n\t\t\tImageName: \"BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.f5os.F5osFunctions;\nimport com.pulumi.f5os.inputs.GetTenantImageArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = F5osFunctions.getTenantImage(GetTenantImageArgs.builder()\n            .imageName(\"BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      function: f5os:getTenantImage\n      arguments:\n        imageName: BIGIP-17.1.0-0.0.16.ALL-F5OS.qcow2.zip.bundle\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTenantImage.\n",
                "properties": {
                    "imageName": {
                        "type": "string",
                        "description": "Name of the tenant image to check\n"
                    }
                },
                "type": "object",
                "required": [
                    "imageName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTenantImage.\n",
                "properties": {
                    "id": {
                        "description": "Unique identifier of this data source\n",
                        "type": "string"
                    },
                    "imageName": {
                        "description": "Name of the tenant image to check\n",
                        "type": "string"
                    },
                    "imageStatus": {
                        "description": "Status of Image on the F5OS Platforms\n",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "imageName",
                    "imageStatus"
                ],
                "type": "object"
            }
        },
        "pulumi:providers:f5os/terraformConfig": {
            "description": "This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.",
            "inputs": {
                "properties": {
                    "__self__": {
                        "type": "ref",
                        "$ref": "#/resources/pulumi:providers:f5os"
                    }
                },
                "type": "pulumi:providers:f5os/terraformConfig",
                "required": [
                    "__self__"
                ]
            },
            "outputs": {
                "properties": {
                    "result": {
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "result"
                ],
                "type": "object"
            }
        }
    }
}